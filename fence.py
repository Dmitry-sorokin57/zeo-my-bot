# -*- coding: utf-8 -*-
from math import sin
import traceback
from math import cos
from math import sqrt
from math import tan
import json
import numpy
from urllib.request import urlretrieve
from threading import Thread
import requests
import functools
import vk_api
from translate import Translator
from PIL import Image, ImageFilter, ImageDraw
import pymorphy2
import arrow
import matplotlib.pyplot as plt
import matplotlib
import bs4
from vk_api import VkUpload
import schedule
import statistics
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id
import wikipedia  # Модуль Википедии
import fractions
import random
import datetime as dt
import time
import roman
import openpyxl
numbers = {'0': '0&#8419;', '1': '1&#8419;', '2': '2&#8419;', '3': '3&#8419;', '4': '4&#8419;', '5': '5&#8419;'}
the_end = {'0': 'баллов', '1': 'балл', '2': 'балла', '3': 'балла', '4': 'балла', '5': 'баллов'}
tr = ['x', '/', '*', '+', '-', 'y', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ', 'a', 'b', 's', '(', ')', 'c', 'o', 'i', 'n', 't', 'q', 'r']
#print(monday.keys())
ch = True
kost = True
dict1 = {}
dict2 = {}
wikipedia.set_lang("RU")
my_id = 157682761
vk_session = vk_api.VkApi(
    token='2c26c35c4b0b73ffc0b5ac5e46af4363b3f8d444f2bd3252497e7ca3e8b3aec8688d3e55fe9b9045f6450')  # beaf4ca3c511097552f5ffc4eab12eb47bfaf49fcedc3678178ae4fe711c21e826aa065d223e450a944f4  '0a2e5c088d0851a762214360c5428dd432c86d772b906cb0a98c8b3b303dc57b53f53f3ea09d767dc2157'
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType, VkBotEvent

choices = [
    'It is certain (Бесспорно)',
    'It is decidedly so (Предрешено)',
    'Without a doubt (Никаких сомнений)',
    'Yes — definitely (Определённо да)',
    'You may rely on it (Можешь быть уверен в этом)',
    'As I see it, yes (Мне кажется — «да»)',
    'Most likely (Вероятнее всего)',
    'Outlook good (Хорошие перспективы)',
    'Signs point to yes (Знаки говорят — «да»)',
    'Yes (Да)',
    'Reply hazy, try again (Пока не ясно, попробуй снова)',
    'Ask again later (Спроси позже)',
    'Better not tell you now (Лучше не рассказывать)',
    'Cannot predict now (Сейчас нельзя предсказать)',
    'Concentrate and ask again (Соберись и спроси опять)',
    'Don’t count on it (Даже не думай)',
    'My reply is no (Мой ответ — «нет»)',
    'My sources say no (По моим данным — «нет»)',
    'Outlook not so good (Перспективы не очень хорошие)',
    'Very doubtful (Весьма сомнительно)',
]

haha = {"1)": "Семейные",
     '2)': 'Армия',
     '3)': 'Про студентов',
     '4)': 'Про мужчин',
     '5)': 'Народные',
     '6)': 'Новые русские',
     '7)': 'Вовочка',
     '8)': 'Компьютеры',
     '9)': 'Спорт',
     '10)': 'Советские',
     '11)': 'Иностранцы',
     '12)': 'Дорожные',
     '13)': 'Животные',
     '14)': 'Черный юмор',
     '15)': 'Сказочные',
     '16)': 'Про евреев',
     '17)': 'Криминал',
     '18)': 'Поручик Ржевский',
     '19)': 'Про женщин',
     '20)': 'Штирлиц',
     '21)': 'WOW',
     '22)': 'Киногерои',
     '23)': 'Алкоголики',
     '24)': 'Чукча',
     '25)': 'Реклама',
     '26)': 'Бородатые',
     '27)': 'Про детей',
     '28)': 'Про программистов',
     '29)': 'Про Путина',
     '30)': 'Милиция',
     '31)': 'Судебные',
     '32)': 'Про сисадмина',
     '33)': 'Политика',
     '34)': 'Друзья',
     '35)': 'Про Билла Гейтса',
     '36)': 'Про тещу',
     '37)': 'Про деньги',
     '38)': 'Шоу-бизнес',
     '39)': 'Школьные'}
an = {'Семейные': '1)', 'Армия': '2)', 'Про студентов': '3)', 'Про мужчин': '4)', 'Народные': '5)', 'Новые русские': '6)', 'Вовочка': '7)', 'Компьютеры': '8)', 'Спорт': '9)', 'Советские': '10)', 'Иностранцы': '11)', 'Дорожные': '12)', 'Животные': '13)', 'Черный юмор': '14)', 'Сказочные': '15)', 'Про евреев': '16)', 'Криминал': '17)', 'Поручик Ржевский': '18)', 'Про женщин': '19)', 'Штирлиц': '20)', 'WOW': '21)', 'Киногерои': '22)', 'Алкоголики': '23)', 'Чукча': '24)', 'Реклама': '25)', 'Бородатые': '26)', 'Про детей': '27)', 'Про программистов': '28)', 'Про Путина': '29)', 'Милиция': '30)', 'Судебные': '31)', 'Про сисадмина': '32)', 'Политика': '33)', 'Друзья': '34)', 'Про Билла Гейтса': '35)', 'Про тещу': '36)', 'Про деньги': '37)', 'Шоу-бизнес': '38)', 'Школьные': '39)'}

flags_total = {}
vk_pic = ["ad.webp",
          "ae.webp",
          "af.webp",
          "ag.webp",
          "al.webp",
          "am.webp",
          "ao.webp",
          "ar.webp",
          "at.webp",
          "au.webp",
          "az.webp",
          "ba.webp",
          "bb.webp",
          "bd.webp",
          "be.webp",
          "bf.webp",
          "bg.webp",
          "bh.webp",
          "bi.webp",
          "bj.webp",
          "bn.webp",
          "bo.webp",
          "br.webp",
          "bs.webp",
          "bt.webp",
          "bw.webp",
          "by.webp",
          "bz.webp",
          "ca.webp",
          "cd.webp",
          "cf.webp",
          "cg.webp",
          "ch.webp",
          "ci.webp",
          "ck.webp",
          "cl.webp",
          "cm.webp",
          "cn.webp",
          "co.webp",
          "cr.webp",
          "cu.webp",
          "cv.webp",
          "cy.webp",
          "cz.webp",
          "de.webp",
          "dj.webp",
          "dk.webp",
          "dm.webp",
          "do.webp",
          "dz.webp",
          "ec.webp",
          "ee.webp",
          "eg.webp",
          "eh.webp",
          "er.webp",
          "es.webp",
          "et.webp",
          "fi.webp",
          "fj.webp",
          "fm.webp",
          "fr.webp",
          "ga.webp",
          "gb.webp",
          "gd.webp",
          "ge.webp",
          "gh.webp",
          "gm.webp",
          "gn.webp",
          "gq.webp",
          "gr.webp",
          "gt.webp",
          "gw.webp",
          "gy.webp",
          "hn.webp",
          "hr.webp",
          "ht.webp",
          "hu.webp",
          "id.webp",
          "ie.webp",
          "il.webp",
          "in.webp",
          "iq.webp",
          "ir.webp",
          "is.webp",
          "it.webp",
          "jm.webp",
          "jo.webp",
          "jp.webp",
          "ke.webp",
          "kg.webp",
          "kh.webp",
          "ki.webp",
          "km.webp",
          "kn.webp",
          "kp.webp",
          "kr.webp",
          "kw.webp",
          "kz.webp",
          "la.webp",
          "lb.webp",
          "lc.webp",
          "li.webp",
          "lk.webp",
          "lr.webp",
          "ls.webp",
          "lt.webp",
          "lu.webp",
          "lv.webp",
          "ly.webp",
          "ma.webp",
          "mc.webp",
          "md.webp",
          "me.webp",
          "mg.webp",
          "mh.webp",
          "mk.webp",
          "ml.webp",
          "mm.webp",
          "mn.webp",
          "mr.webp",
          "mt.webp",
          "mu.webp",
          "mv.webp",
          "mw.webp",
          "mx.webp",
          "my.webp",
          "mz.webp",
          "na.webp",
          "ne.webp",
          "ng.webp",
          "ni.webp",
          "nl.webp",
          "no.webp",
          "np.webp",
          "nr.webp",
          "nu.webp",
          "nz.webp",
          "om.webp",
          "pa.webp",
          "pe.webp",
          "pg.webp",
          "pk.webp",
          "pl.webp",
          "ps.webp",
          "pt.webp",
          "pw.webp",
          "py.webp",
          "qa.webp",
          "ro.webp",
          "rs.webp",
          "ru.webp",
          "rw.webp",
          "sa.webp",
          "sb.webp",
          "sc.webp",
          "sd.webp",
          "se.webp",
          "sg.webp",
          "si.webp",
          "sk.webp",
          "sl.webp",
          "sm.webp",
          "sn.webp",
          "so.webp",
          "sr.webp",
          "ss.webp",
          "st.webp",
          "sv.webp",
          "sy.webp",
          "sz.webp",
          "td.webp",
          "tg.webp",
          "th.webp",
          "tj.webp",
          "tl.webp",
          "tm.webp",
          "tn.webp",
          "to.webp",
          "tr.webp",
          "tt.webp",
          "tv.webp",
          "tw.webp",
          "tz.webp",
          "ua.webp",
          "ug.webp",
          "us.webp",
          "uy.webp",
          "uz.webp",
          "va.webp",
          "vc.webp",
          "ve.webp",
          "vn.webp",
          "vu.webp",
          "ws.webp",
          "xk.webp",
          "ye.webp",
          "za.webp",
          "zm.webp",
          "zw.webp"]
vk_paw = ['photo-195623259_457239739', 'photo-195623259_457239740', 'photo-195623259_457239741',
          'photo-195623259_457239742', 'photo-195623259_457239743', 'photo-195623259_457239744',
          'photo-195623259_457239745', 'photo-195623259_457239746', 'photo-195623259_457239747',
          'photo-195623259_457239748', 'photo-195623259_457239749', 'photo-195623259_457239750',
          'photo-195623259_457239751', 'photo-195623259_457239752', 'photo-195623259_457239753',
          'photo-195623259_457239754', 'photo-195623259_457239755', 'photo-195623259_457239756',
          'photo-195623259_457239757', 'photo-195623259_457239758', 'photo-195623259_457239759',
          'photo-195623259_457239760', 'photo-195623259_457239761', 'photo-195623259_457239762',
          'photo-195623259_457239763', 'photo-195623259_457239764', 'photo-195623259_457239765',
          'photo-195623259_457239766', 'photo-195623259_457239767', 'photo-195623259_457239768',
          'photo-195623259_457239769', 'photo-195623259_457239770', 'photo-195623259_457239771',
          'photo-195623259_457239772', 'photo-195623259_457239773', 'photo-195623259_457239774',
          'photo-195623259_457239775', 'photo-195623259_457239776', 'photo-195623259_457239777',
          'photo-195623259_457239778', 'photo-195623259_457239779', 'photo-195623259_457239780',
          'photo-195623259_457239781', 'photo-195623259_457239782', 'photo-195623259_457239783',
          'photo-195623259_457239784', 'photo-195623259_457239785', 'photo-195623259_457239786',
          'photo-195623259_457239787', 'photo-195623259_457239788', 'photo-195623259_457239789',
          'photo-195623259_457239790', 'photo-195623259_457239791', 'photo-195623259_457239792',
          'photo-195623259_457239793', 'photo-195623259_457239794', 'photo-195623259_457239795',
          'photo-195623259_457239796', 'photo-195623259_457239797', 'photo-195623259_457239798',
          'photo-195623259_457239799', 'photo-195623259_457239800', 'photo-195623259_457239801',
          'photo-195623259_457239802', 'photo-195623259_457239803', 'photo-195623259_457239804',
          'photo-195623259_457239805', 'photo-195623259_457239806', 'photo-195623259_457239807',
          'photo-195623259_457239808', 'photo-195623259_457239809', 'photo-195623259_457239810',
          'photo-195623259_457239811', 'photo-195623259_457239812', 'photo-195623259_457239813',
          'photo-195623259_457239814', 'photo-195623259_457239815', 'photo-195623259_457239816',
          'photo-195623259_457239817', 'photo-195623259_457239818', 'photo-195623259_457239819',
          'photo-195623259_457239820', 'photo-195623259_457239821', 'photo-195623259_457239822',
          'photo-195623259_457239823', 'photo-195623259_457239824', 'photo-195623259_457239825',
          'photo-195623259_457239826', 'photo-195623259_457239827', 'photo-195623259_457239828',
          'photo-195623259_457239829', 'photo-195623259_457239830', 'photo-195623259_457239831',
          'photo-195623259_457239832', 'photo-195623259_457239833', 'photo-195623259_457239834',
          'photo-195623259_457239835', 'photo-195623259_457239836', 'photo-195623259_457239837',
          'photo-195623259_457239838', 'photo-195623259_457239839', 'photo-195623259_457239840',
          'photo-195623259_457239841', 'photo-195623259_457239842', 'photo-195623259_457239843',
          'photo-195623259_457239844', 'photo-195623259_457239845', 'photo-195623259_457239846',
          'photo-195623259_457239847', 'photo-195623259_457239848', 'photo-195623259_457239849',
          'photo-195623259_457239850', 'photo-195623259_457239851', 'photo-195623259_457239852',
          'photo-195623259_457239853', 'photo-195623259_457239854', 'photo-195623259_457239855',
          'photo-195623259_457239856', 'photo-195623259_457239857', 'photo-195623259_457239858',
          'photo-195623259_457239859', 'photo-195623259_457239860', 'photo-195623259_457239861',
          'photo-195623259_457239862', 'photo-195623259_457239863', 'photo-195623259_457239864',
          'photo-195623259_457239865', 'photo-195623259_457239866', 'photo-195623259_457239867',
          'photo-195623259_457239868', 'photo-195623259_457239869', 'photo-195623259_457239870',
          'photo-195623259_457239871', 'photo-195623259_457239872', 'photo-195623259_457239873',
          'photo-195623259_457239874', 'photo-195623259_457239875', 'photo-195623259_457239876',
          'photo-195623259_457239877', 'photo-195623259_457239878', 'photo-195623259_457239879',
          'photo-195623259_457239881', 'photo-195623259_457239882', 'photo-195623259_457239883',
          'photo-195623259_457239884', 'photo-195623259_457239885', 'photo-195623259_457239886',
          'photo-195623259_457239887', 'photo-195623259_457239888', 'photo-195623259_457239889',
          'photo-195623259_457239890', 'photo-195623259_457239891', 'photo-195623259_457239892',
          'photo-195623259_457239893', 'photo-195623259_457239894', 'photo-195623259_457239895',
          'photo-195623259_457239896', 'photo-195623259_457239897', 'photo-195623259_457239898',
          'photo-195623259_457239899', 'photo-195623259_457239900', 'photo-195623259_457239901',
          'photo-195623259_457239902', 'photo-195623259_457239903', 'photo-195623259_457239904',
          'photo-195623259_457239905', 'photo-195623259_457239906', 'photo-195623259_457239907',
          'photo-195623259_457239908', 'photo-195623259_457239909', 'photo-195623259_457239910',
          'photo-195623259_457239911', 'photo-195623259_457239912', 'photo-195623259_457239913',
          'photo-195623259_457239914', 'photo-195623259_457239915', 'photo-195623259_457239916',
          'photo-195623259_457239917', 'photo-195623259_457239918', 'photo-195623259_457239919',
          'photo-195623259_457239920', 'photo-195623259_457239921', 'photo-195623259_457239922',
          'photo-195623259_457239923', 'photo-195623259_457239924', 'photo-195623259_457239925',
          'photo-195623259_457239926', 'photo-195623259_457239927', 'photo-195623259_457239928',
          'photo-195623259_457239929', 'photo-195623259_457239930', 'photo-195623259_457239931',
          'photo-195623259_457239932', 'photo-195623259_457239933', 'photo-195623259_457239934',
          'photo-195623259_457239935', 'photo-195623259_457239936', 'photo-195623259_457239937',
          'photo-195623259_457239938']

month_birthday = {'01': 'января', '02': 'февраля', '03': 'марта', '04': 'апреля', '05': 'мая', '06': 'июня', '07': 'июля', '08': 'августа', '09': 'сентября', '10': 'октября', '11': 'ноября', '12': 'декабря'}

flags_vk = {'Андорра': 'photo-195623259_457239739', 'Объединённые Арабские Эмираты': 'photo-195623259_457239740', 'Афганистан': 'photo-195623259_457239741', 'Антигуа и Барбуда': 'photo-195623259_457239742', 'Албания': 'photo-195623259_457239743', 'Армения': 'photo-195623259_457239744', 'Ангола': 'photo-195623259_457239745', 'Аргентина': 'photo-195623259_457239746', 'Австрия': 'photo-195623259_457239747', 'Австралия': 'photo-195623259_457239748', 'Азербайджан': 'photo-195623259_457239749', 'Босния и Герцеговина': 'photo-195623259_457239750', 'Барбадос': 'photo-195623259_457239751', 'Бангладеш': 'photo-195623259_457239752', 'Бельгия': 'photo-195623259_457239753', 'Буркина-Фасо': 'photo-195623259_457239754', 'Болгария': 'photo-195623259_457239755', 'Бахрейн': 'photo-195623259_457239756', 'Бурунди': 'photo-195623259_457239757', 'Бенин': 'photo-195623259_457239758', 'Бруней': 'photo-195623259_457239759', 'Боливия': 'photo-195623259_457239760', 'Бразилия': 'photo-195623259_457239761', 'Багамские Острова': 'photo-195623259_457239762', 'Бутан': 'photo-195623259_457239763', 'Ботсвана': 'photo-195623259_457239764', 'Беларусь': 'photo-195623259_457239765', 'Белиз': 'photo-195623259_457239766', 'Канада': 'photo-195623259_457239767', 'Демократическая Республика Конго': 'photo-195623259_457239768', 'Центральноафриканская Республика': 'photo-195623259_457239769', 'Республика Конго': 'photo-195623259_457239770', 'Швейцария': 'photo-195623259_457239771', 'Кот-д’Ивуар': 'photo-195623259_457239772', 'Острова Кука': 'photo-195623259_457239773', 'Чили': 'photo-195623259_457239774', 'Камерун': 'photo-195623259_457239775', 'Китай': 'photo-195623259_457239776', 'Колумбия': 'photo-195623259_457239777', 'Коста-Рика': 'photo-195623259_457239778', 'Куба': 'photo-195623259_457239779', 'Кабо-Верде': 'photo-195623259_457239780', 'Кипр': 'photo-195623259_457239781', 'Чехия': 'photo-195623259_457239782', 'Германия': 'photo-195623259_457239783', 'Джибути': 'photo-195623259_457239784', 'Дания': 'photo-195623259_457239785', 'Доминика': 'photo-195623259_457239786', 'Доминиканская республика': 'photo-195623259_457239787', 'Алжир': 'photo-195623259_457239788', 'Эквадор': 'photo-195623259_457239789', 'Эстония': 'photo-195623259_457239790', 'Египет': 'photo-195623259_457239791', 'Западная Сахара': 'photo-195623259_457239792', 'Эритрея': 'photo-195623259_457239793', 'Испания': 'photo-195623259_457239794', 'Эфиопия': 'photo-195623259_457239795', 'Финляндия': 'photo-195623259_457239796', 'Фиджи': 'photo-195623259_457239797', 'Федеративные Штаты Микронезии': 'photo-195623259_457239798', 'Франция': 'photo-195623259_457239799', 'Габон': 'photo-195623259_457239800', 'Великобритания': 'photo-195623259_457239801', 'Гренада': 'photo-195623259_457239802', 'Грузия': 'photo-195623259_457239803', 'Гана': 'photo-195623259_457239804', 'Гамбия': 'photo-195623259_457239805', 'Гвинея': 'photo-195623259_457239806', 'Экваториальная Гвинея': 'photo-195623259_457239807', 'Греция': 'photo-195623259_457239808', 'Гватемала': 'photo-195623259_457239809', 'Гвинея-Бисау': 'photo-195623259_457239810', 'Гайана': 'photo-195623259_457239811', 'Гондурас': 'photo-195623259_457239812', 'Хорватия': 'photo-195623259_457239813', 'Гаити': 'photo-195623259_457239814', 'Венгрия': 'photo-195623259_457239815', 'Индонезия': 'photo-195623259_457239816', 'Ирландия': 'photo-195623259_457239817', 'Израиль': 'photo-195623259_457239818', 'Индия': 'photo-195623259_457239819', 'Ирак': 'photo-195623259_457239820', 'Иран': 'photo-195623259_457239821', 'Исландия': 'photo-195623259_457239822', 'Италия': 'photo-195623259_457239823', 'Ямайка': 'photo-195623259_457239824', 'Иордания': 'photo-195623259_457239825', 'Япония': 'photo-195623259_457239826', 'Кения': 'photo-195623259_457239827', 'Киргизия': 'photo-195623259_457239828', 'Камбоджа': 'photo-195623259_457239829', 'Кирибати': 'photo-195623259_457239830', 'Коморские острова': 'photo-195623259_457239831', 'Сент-Киттс и Невис': 'photo-195623259_457239832', 'КНДР': 'photo-195623259_457239833', 'Республика Корея': 'photo-195623259_457239834', 'Кувейт': 'photo-195623259_457239835', 'Казахстан': 'photo-195623259_457239836', 'Лаос': 'photo-195623259_457239837', 'Ливан': 'photo-195623259_457239838', 'Сент-Люсия': 'photo-195623259_457239839', 'Лихтенштейн': 'photo-195623259_457239840', 'Шри-Ланка': 'photo-195623259_457239841', 'Либерия': 'photo-195623259_457239842', 'Лесото': 'photo-195623259_457239843', 'Литва': 'photo-195623259_457239844', 'Люксембург': 'photo-195623259_457239845', 'Латвия': 'photo-195623259_457239846', 'Ливия': 'photo-195623259_457239847', 'Марокко': 'photo-195623259_457239848', 'Монако': 'photo-195623259_457239849', 'Молдавия': 'photo-195623259_457239850', 'Черногория': 'photo-195623259_457239851', 'Мадагаскар': 'photo-195623259_457239852', 'Маршалловы острова': 'photo-195623259_457239853', 'Республика Македония': 'photo-195623259_457239854', 'Мали': 'photo-195623259_457239855', 'Мьянма': 'photo-195623259_457239856', 'Монголия': 'photo-195623259_457239857', 'Мавритания': 'photo-195623259_457239858', 'Мальта': 'photo-195623259_457239859', 'Маврикий': 'photo-195623259_457239860', 'Мальдивы': 'photo-195623259_457239861', 'Малави': 'photo-195623259_457239862', 'Мексика': 'photo-195623259_457239863', 'Малайзия': 'photo-195623259_457239864', 'Мозамбик': 'photo-195623259_457239865', 'Намибия': 'photo-195623259_457239866', 'Нигер': 'photo-195623259_457239867', 'Нигерия': 'photo-195623259_457239868', 'Никарагуа': 'photo-195623259_457239869', 'Нидерланды': 'photo-195623259_457239870', 'Норвегия': 'photo-195623259_457239871', 'Непал': 'photo-195623259_457239872', 'Науру': 'photo-195623259_457239873', 'Ниуэ': 'photo-195623259_457239874', 'Новая Зеландия': 'photo-195623259_457239875', 'Оман': 'photo-195623259_457239876', 'Панама': 'photo-195623259_457239877', 'Перу': 'photo-195623259_457239878', 'Папуа -- Новая Гвинея': 'photo-195623259_457239879', 'Пакистан': 'photo-195623259_457239881', 'Польша': 'photo-195623259_457239882', 'Палестина': 'photo-195623259_457239883', 'Португалия': 'photo-195623259_457239884', 'Палау': 'photo-195623259_457239885', 'Парагвай': 'photo-195623259_457239886', 'Катар': 'photo-195623259_457239887', 'Румыния': 'photo-195623259_457239888', 'Сербия': 'photo-195623259_457239889', 'Россия': 'photo-195623259_457239890', 'Руанда': 'photo-195623259_457239891', 'Саудовская Аравия': 'photo-195623259_457239892', 'Соломоновы острова': 'photo-195623259_457239893', 'Сейшельсские острова': 'photo-195623259_457239894', 'Судан': 'photo-195623259_457239895', 'Швеция': 'photo-195623259_457239896', 'Сингапур': 'photo-195623259_457239897', 'Словения': 'photo-195623259_457239898', 'Словакия': 'photo-195623259_457239899', 'Сьерра-Леоне': 'photo-195623259_457239900', 'Сан-Марино': 'photo-195623259_457239901', 'Сенегал': 'photo-195623259_457239902', 'Сомали': 'photo-195623259_457239903', 'Суринам': 'photo-195623259_457239904', 'Южный Судан': 'photo-195623259_457239905', 'Сан-Томе и Принсипи': 'photo-195623259_457239906', 'Сальвадор': 'photo-195623259_457239907', 'Сирия': 'photo-195623259_457239908', 'Свазиленд': 'photo-195623259_457239909', 'Чад': 'photo-195623259_457239910', 'Того': 'photo-195623259_457239911', 'Таиланд': 'photo-195623259_457239912', 'Таджикистан': 'photo-195623259_457239913', 'Восточный Тимор': 'photo-195623259_457239914', 'Туркменистан': 'photo-195623259_457239915', 'Тунис': 'photo-195623259_457239916', 'Тонга': 'photo-195623259_457239917', 'Турция': 'photo-195623259_457239918', 'Тринидад и Тобаго': 'photo-195623259_457239919', 'Тувалу': 'photo-195623259_457239920', 'Тайвань': 'photo-195623259_457239921', 'Танзания': 'photo-195623259_457239922', 'Украина': 'photo-195623259_457239923', 'Уганда': 'photo-195623259_457239924', 'Соединённые Штаты Америки': 'photo-195623259_457239925', 'Уругвай': 'photo-195623259_457239926', 'Узбекистан': 'photo-195623259_457239927', 'Ватикан': 'photo-195623259_457239928', 'Сент-Винсент и Гренадины': 'photo-195623259_457239929', 'Венесуэла': 'photo-195623259_457239930', 'Вьетнам': 'photo-195623259_457239931', 'Вануату': 'photo-195623259_457239932', 'Самоа': 'photo-195623259_457239933', 'Косово': 'photo-195623259_457239934', 'Йемен': 'photo-195623259_457239935', 'Южно-Африканская Республика': 'photo-195623259_457239936', 'Замбия': 'photo-195623259_457239937', 'Зимбабве': 'photo-195623259_457239938'}
vk_flags = {'photo-195623259_457239739': 'Андорра', 'photo-195623259_457239740': 'Объединённые Арабские Эмираты',
            'photo-195623259_457239741': 'Афганистан', 'photo-195623259_457239742': 'Антигуа и Барбуда',
            'photo-195623259_457239743': 'Албания', 'photo-195623259_457239744': 'Армения',
            'photo-195623259_457239745': 'Ангола', 'photo-195623259_457239746': 'Аргентина',
            'photo-195623259_457239747': 'Австрия', 'photo-195623259_457239748': 'Австралия',
            'photo-195623259_457239749': 'Азербайджан', 'photo-195623259_457239750': 'Босния и Герцеговина',
            'photo-195623259_457239751': 'Барбадос', 'photo-195623259_457239752': 'Бангладеш',
            'photo-195623259_457239753': 'Бельгия', 'photo-195623259_457239754': 'Буркина-Фасо',
            'photo-195623259_457239755': 'Болгария', 'photo-195623259_457239756': 'Бахрейн',
            'photo-195623259_457239757': 'Бурунди', 'photo-195623259_457239758': 'Бенин',
            'photo-195623259_457239759': 'Бруней', 'photo-195623259_457239760': 'Боливия',
            'photo-195623259_457239761': 'Бразилия', 'photo-195623259_457239762': 'Багамские Острова',
            'photo-195623259_457239763': 'Бутан', 'photo-195623259_457239764': 'Ботсвана',
            'photo-195623259_457239765': 'Беларусь', 'photo-195623259_457239766': 'Белиз',
            'photo-195623259_457239767': 'Канада', 'photo-195623259_457239768': 'Демократическая Республика Конго',
            'photo-195623259_457239769': 'Центральноафриканская Республика',
            'photo-195623259_457239770': 'Республика Конго', 'photo-195623259_457239771': 'Швейцария',
            'photo-195623259_457239772': 'Кот-д’Ивуар', 'photo-195623259_457239773': 'Острова Кука',
            'photo-195623259_457239774': 'Чили', 'photo-195623259_457239775': 'Камерун',
            'photo-195623259_457239776': 'Китай', 'photo-195623259_457239777': 'Колумбия',
            'photo-195623259_457239778': 'Коста-Рика', 'photo-195623259_457239779': 'Куба',
            'photo-195623259_457239780': 'Кабо-Верде', 'photo-195623259_457239781': 'Кипр',
            'photo-195623259_457239782': 'Чехия', 'photo-195623259_457239783': 'Германия',
            'photo-195623259_457239784': 'Джибути', 'photo-195623259_457239785': 'Дания',
            'photo-195623259_457239786': 'Доминика', 'photo-195623259_457239787': 'Доминиканская республика',
            'photo-195623259_457239788': 'Алжир', 'photo-195623259_457239789': 'Эквадор',
            'photo-195623259_457239790': 'Эстония', 'photo-195623259_457239791': 'Египет',
            'photo-195623259_457239792': 'Западная Сахара', 'photo-195623259_457239793': 'Эритрея',
            'photo-195623259_457239794': 'Испания', 'photo-195623259_457239795': 'Эфиопия',
            'photo-195623259_457239796': 'Финляндия', 'photo-195623259_457239797': 'Фиджи',
            'photo-195623259_457239798': 'Федеративные Штаты Микронезии', 'photo-195623259_457239799': 'Франция',
            'photo-195623259_457239800': 'Габон', 'photo-195623259_457239801': 'Великобритания',
            'photo-195623259_457239802': 'Гренада', 'photo-195623259_457239803': 'Грузия',
            'photo-195623259_457239804': 'Гана', 'photo-195623259_457239805': 'Гамбия',
            'photo-195623259_457239806': 'Гвинея', 'photo-195623259_457239807': 'Экваториальная Гвинея',
            'photo-195623259_457239808': 'Греция', 'photo-195623259_457239809': 'Гватемала',
            'photo-195623259_457239810': 'Гвинея-Бисау', 'photo-195623259_457239811': 'Гайана',
            'photo-195623259_457239812': 'Гондурас', 'photo-195623259_457239813': 'Хорватия',
            'photo-195623259_457239814': 'Гаити', 'photo-195623259_457239815': 'Венгрия',
            'photo-195623259_457239816': 'Индонезия', 'photo-195623259_457239817': 'Ирландия',
            'photo-195623259_457239818': 'Израиль', 'photo-195623259_457239819': 'Индия',
            'photo-195623259_457239820': 'Ирак', 'photo-195623259_457239821': 'Иран',
            'photo-195623259_457239822': 'Исландия', 'photo-195623259_457239823': 'Италия',
            'photo-195623259_457239824': 'Ямайка', 'photo-195623259_457239825': 'Иордания',
            'photo-195623259_457239826': 'Япония', 'photo-195623259_457239827': 'Кения',
            'photo-195623259_457239828': 'Киргизия', 'photo-195623259_457239829': 'Камбоджа',
            'photo-195623259_457239830': 'Кирибати', 'photo-195623259_457239831': 'Коморские острова',
            'photo-195623259_457239832': 'Сент-Киттс и Невис', 'photo-195623259_457239833': 'КНДР',
            'photo-195623259_457239834': 'Республика Корея', 'photo-195623259_457239835': 'Кувейт',
            'photo-195623259_457239836': 'Казахстан', 'photo-195623259_457239837': 'Лаос',
            'photo-195623259_457239838': 'Ливан', 'photo-195623259_457239839': 'Сент-Люсия',
            'photo-195623259_457239840': 'Лихтенштейн', 'photo-195623259_457239841': 'Шри-Ланка',
            'photo-195623259_457239842': 'Либерия', 'photo-195623259_457239843': 'Лесото',
            'photo-195623259_457239844': 'Литва', 'photo-195623259_457239845': 'Люксембург',
            'photo-195623259_457239846': 'Латвия', 'photo-195623259_457239847': 'Ливия',
            'photo-195623259_457239848': 'Марокко', 'photo-195623259_457239849': 'Монако',
            'photo-195623259_457239850': 'Молдавия', 'photo-195623259_457239851': 'Черногория',
            'photo-195623259_457239852': 'Мадагаскар', 'photo-195623259_457239853': 'Маршалловы острова',
            'photo-195623259_457239854': 'Республика Македония', 'photo-195623259_457239855': 'Мали',
            'photo-195623259_457239856': 'Мьянма', 'photo-195623259_457239857': 'Монголия',
            'photo-195623259_457239858': 'Мавритания', 'photo-195623259_457239859': 'Мальта',
            'photo-195623259_457239860': 'Маврикий', 'photo-195623259_457239861': 'Мальдивы',
            'photo-195623259_457239862': 'Малави', 'photo-195623259_457239863': 'Мексика',
            'photo-195623259_457239864': 'Малайзия', 'photo-195623259_457239865': 'Мозамбик',
            'photo-195623259_457239866': 'Намибия', 'photo-195623259_457239867': 'Нигер',
            'photo-195623259_457239868': 'Нигерия', 'photo-195623259_457239869': 'Никарагуа',
            'photo-195623259_457239870': 'Нидерланды', 'photo-195623259_457239871': 'Норвегия',
            'photo-195623259_457239872': 'Непал', 'photo-195623259_457239873': 'Науру',
            'photo-195623259_457239874': 'Ниуэ', 'photo-195623259_457239875': 'Новая Зеландия',
            'photo-195623259_457239876': 'Оман', 'photo-195623259_457239877': 'Панама',
            'photo-195623259_457239878': 'Перу', 'photo-195623259_457239879': 'Папуа -- Новая Гвинея',
            'photo-195623259_457239881': 'Пакистан', 'photo-195623259_457239882': 'Польша',
            'photo-195623259_457239883': 'Палестина', 'photo-195623259_457239884': 'Португалия',
            'photo-195623259_457239885': 'Палау', 'photo-195623259_457239886': 'Парагвай',
            'photo-195623259_457239887': 'Катар', 'photo-195623259_457239888': 'Румыния',
            'photo-195623259_457239889': 'Сербия', 'photo-195623259_457239890': 'Россия',
            'photo-195623259_457239891': 'Руанда', 'photo-195623259_457239892': 'Саудовская Аравия',
            'photo-195623259_457239893': 'Соломоновы острова', 'photo-195623259_457239894': 'Сейшельсские острова',
            'photo-195623259_457239895': 'Судан', 'photo-195623259_457239896': 'Швеция',
            'photo-195623259_457239897': 'Сингапур', 'photo-195623259_457239898': 'Словения',
            'photo-195623259_457239899': 'Словакия', 'photo-195623259_457239900': 'Сьерра-Леоне',
            'photo-195623259_457239901': 'Сан-Марино', 'photo-195623259_457239902': 'Сенегал',
            'photo-195623259_457239903': 'Сомали', 'photo-195623259_457239904': 'Суринам',
            'photo-195623259_457239905': 'Южный Судан', 'photo-195623259_457239906': 'Сан-Томе и Принсипи',
            'photo-195623259_457239907': 'Сальвадор', 'photo-195623259_457239908': 'Сирия',
            'photo-195623259_457239909': 'Свазиленд', 'photo-195623259_457239910': 'Чад',
            'photo-195623259_457239911': 'Того', 'photo-195623259_457239912': 'Таиланд',
            'photo-195623259_457239913': 'Таджикистан', 'photo-195623259_457239914': 'Восточный Тимор',
            'photo-195623259_457239915': 'Туркменистан', 'photo-195623259_457239916': 'Тунис',
            'photo-195623259_457239917': 'Тонга', 'photo-195623259_457239918': 'Турция',
            'photo-195623259_457239919': 'Тринидад и Тобаго', 'photo-195623259_457239920': 'Тувалу',
            'photo-195623259_457239921': 'Тайвань', 'photo-195623259_457239922': 'Танзания',
            'photo-195623259_457239923': 'Украина', 'photo-195623259_457239924': 'Уганда',
            'photo-195623259_457239925': 'Соединённые Штаты Америки', 'photo-195623259_457239926': 'Уругвай',
            'photo-195623259_457239927': 'Узбекистан', 'photo-195623259_457239928': 'Ватикан',
            'photo-195623259_457239929': 'Сент-Винсент и Гренадины', 'photo-195623259_457239930': 'Венесуэла',
            'photo-195623259_457239931': 'Вьетнам', 'photo-195623259_457239932': 'Вануату',
            'photo-195623259_457239933': 'Самоа', 'photo-195623259_457239934': 'Косово',
            'photo-195623259_457239935': 'Йемен', 'photo-195623259_457239936': 'Южно-Африканская Республика',
            'photo-195623259_457239937': 'Замбия', 'photo-195623259_457239938': 'Зимбабве'}
gg = {'&#127479;&#127482;': 'Россия',
      '&#127464;&#127475;': 'Китай',
      '&#127465;&#127466;': 'Германия',
      '&#127466;&#127480;': 'Испания',
      '&#127467;&#127479;': 'Франция',
      '&#127468;&#127463;': 'Великобритания',
      '&#127470;&#127481;': 'Италия',
      '&#127471;&#127477;': 'Япония',
      '&#127472;&#127479;': 'Корея',
      '&#127482;&#127480;': 'США',
      '&#127482;&#127462;': 'Украина',
      '&#127462;&#127466;': 'ОАЭ',
      '&#127462;&#127481;': 'Австрия',
      '&#127462;&#127482;': 'Австралия',
      '&#127463;&#127466;': 'Бельгия',
      '&#127463;&#127479;': 'Бразилия',
      '&#127464;&#127462;': 'Канада',
      '&#127464;&#127469;': 'Швейцария',
      '&#127464;&#127473;': 'Чили',
      '&#127464;&#127476;': 'Колумбия',
      '&#127465;&#127472;': 'Дания',
      '&#127467;&#127470;': 'Финляндия',
      '&#127469;&#127472;': 'Гонконг',
      '&#127470;&#127465;': 'Индонезия',
      '&#127470;&#127466;': 'Ирландия',
      '&#127470;&#127475;': 'Индия',
      '&#127474;&#127476;': 'Макао',
      '&#127474;&#127485;': 'Мексика',
      '&#127474;&#127486;': 'Малайзия',
      '&#127475;&#127473;': 'Нидерланды',
      '&#127475;&#127476;': 'Норвегия',
      '&#127475;&#127487;': 'Новая Зеландия',
      '&#127477;&#127469;': 'Филиппины',
      '&#127477;&#127473;': 'Польша',
      '&#127477;&#127479;': 'Пуэрто-Рико',
      '&#127477;&#127481;': 'Португалия',
      '&#127480;&#127462;': 'Аравия',
      '&#127480;&#127466;': 'Швеция',
      '&#127480;&#127468;': 'Сингапур',
      '&#127483;&#127475;': 'Вьетнам',
      '&#127487;&#127462;': 'Южная-Африка',
      '&#127472;&#127487;': 'Казахстан',
      '&#127463;&#127486;': 'Беларусь',
      '&#127470;&#127473;': 'Израиль',
      '&#127481;&#127479;': 'Турция',
      '&#127884;': 'Скрещенные флаги',
      '&#127988;': 'Чёрный флаг',
      '&#127987;': 'Белый флаг'}

countries = ['Австралия', 'Албания', 'Австрия', 'Азербайджан', 'Алжир', 'Ангола', 'Андорра', 'Антигуа и Барбуда',
             'Аргентина', 'Армения', 'Афганистан', 'Багамские Острова', 'Бангладеш', 'Барбадос', 'Бахрейн', 'Белиз',
             'Беларусь', 'Бельгия', 'Бенин', 'Болгария', 'Боливия', 'Босния и Герцеговина', 'Ботсвана', 'Бразилия',
             'Бруней', 'Буркина-Фасо', 'Бурунди', 'Бутан', 'Вануату', 'Ватикан', 'Великобритания', 'Венгрия',
             'Венесуэла', 'Восточный Тимор', 'Вьетнам', 'Габон', 'Гаити', 'Гайана', 'Гамбия', 'Гана', 'Гватемала',
             'Гвинея', 'Гвинея-Бисау', 'Германия', 'Гондурас', 'Палестина', 'Гренада', 'Греция', 'Грузия', 'Дания',
             'Демократическая Республика Конго', 'Джибути', 'Доминика', 'Доминиканская республика', 'Египет', 'Замбия',
             'Западная Сахара', 'Зимбабве', 'Израиль', 'Индия', 'Индонезия', 'Иордания', 'Ирак', 'Иран', 'Ирландия',
             'Исландия', 'Испания', 'Италия', 'Йемен', 'Кабо-Верде', 'Казахстан', 'Камбоджа', 'Камерун', 'Канада',
             'Катар', 'Кения', 'Кипр', 'Киргизия', 'Кирибати', 'Китай', 'КНДР', 'Колумбия', 'Коморские острова',
             'Косово', 'Коста-Рика', 'Кот-д’Ивуар', 'Куба', 'Кувейт', 'Лаос', 'Латвия', 'Лесото', 'Либерия', 'Ливан',
             'Ливия', 'Литва', 'Лихтенштейн', 'Люксембург', 'Маврикий', 'Мавритания', 'Мадагаскар', 'Малави',
             'Малайзия', 'Мали', 'Мальдивы', 'Мальта', 'Марокко', 'Маршалловы острова', 'Мексика', 'Мозамбик',
             'Молдавия', 'Монако', 'Монголия', 'Мьянма', 'Намибия', 'Науру', 'Непал', 'Нигер', 'Нигерия', 'Ниуэ',
             'Нидерланды', 'Никарагуа', 'Новая Зеландия', 'Норвегия', 'Объединённые Арабские Эмираты', 'Оман',
             'Пакистан', 'Палау', 'Панама', 'Папуа -- Новая Гвинея', 'Парагвай', 'Перу', 'Польша', 'Португалия',
             'Республика Конго', 'Республика Корея', 'Республика Македония', 'Россия', 'Руанда', 'Румыния', 'Сальвадор',
             'Самоа', 'Сан-Марино', 'Сан-Томе и Принсипи', 'Саудовская Аравия', 'Свазиленд', 'Сейшельсские острова',
             'Сенегал', 'Сент-Винсент и Гренадины', 'Сент-Киттс и Невис', 'Сент-Люсия', 'Сербия', 'Сингапур', 'Сирия',
             'Словакия', 'Словения', 'Соединённые Штаты Америки', 'Соломоновы острова', 'Сомали', 'Судан', 'Суринам',
             'Сьерра-Леоне', 'Таджикистан', 'Таиланд', 'Тайвань', 'Танзания', 'Того', 'Тонга', 'Тринидад и Тобаго',
             'Тувалу', 'Тунис', 'Туркменистан', 'Турция', 'Уганда', 'Узбекистан', 'Украина', 'Уругвай',
             'Федеративные Штаты Микронезии', 'Фиджи', 'Филиппины', 'Финляндия', 'Франция', 'Хорватия',
             'Центральноафриканская Республика', 'Острова Кука', 'Чад', 'Черногория', 'Чехия', 'Чили', 'Швейцария',
             'Швеция', 'Шри-Ланка', 'Эквадор', 'Экваториальная Гвинея', 'Эритрея', 'Эстония', 'Эфиопия',
             'Южно-Африканская Республика', 'Южный Судан', 'Ямайка', 'Япония']
flags = ['au.webp', 'al.webp', 'at.webp', 'az.webp', 'dz.webp', 'ao.webp', 'ad.webp', 'ag.webp', 'ar.webp',
         'am.webp', 'af.webp', 'bs.webp', 'bd.webp', 'bb.webp', 'bh.webp', 'bz.webp', 'by.webp', 'be.webp',
         'bj.webp', 'bg.webp', 'bo.webp', 'ba.webp', 'bw.webp', 'br.webp', 'bn.webp', 'bf.webp', 'bi.webp',
         'bt.webp', 'vu.webp', 'va.webp', 'gb.webp', 'hu.webp', 've.webp', 'tl.webp', 'vn.webp', 'ga.webp',
         'ht.webp', 'gy.webp', 'gm.webp', 'gh.webp', 'gt.webp', 'gn.webp', 'gw.webp', 'de.webp', 'hn.webp',
         'ps.webp', 'gd.webp', 'gr.webp', 'ge.webp', 'dk.webp', 'cd.webp', 'dj.webp', 'dm.webp', 'do.webp',
         'eg.webp', 'zm.webp', 'eh.webp', 'zw.webp', 'il.webp', 'in.webp', 'id.webp', 'jo.webp', 'iq.webp',
         'ir.webp', 'ie.webp', 'is.webp', 'es.webp', 'it.webp', 'ye.webp', 'cv.webp', 'kz.webp', 'kh.webp',
         'cm.webp', 'ca.webp', 'qa.webp', 'ke.webp', 'cy.webp', 'kg.webp', 'ki.webp', 'cn.webp', 'kp.webp',
         'co.webp', 'km.webp', 'xk.webp', 'cr.webp', 'ci.webp', 'cu.webp', 'kw.webp', 'la.webp', 'lv.webp',
         'ls.webp', 'lr.webp', 'lb.webp', 'ly.webp', 'lt.webp', 'li.webp', 'lu.webp', 'mu.webp', 'mr.webp',
         'mg.webp', 'mw.webp', 'my.webp', 'ml.webp', 'mv.webp', 'mt.webp', 'ma.webp', 'mh.webp', 'mx.webp',
         'mz.webp', 'md.webp', 'mc.webp', 'mn.webp', 'mm.webp', 'na.webp', 'nr.webp', 'np.webp', 'ne.webp',
         'ng.webp', 'nu.webp', 'nl.webp', 'ni.webp', 'nz.webp', 'no.webp', 'ae.webp', 'om.webp', 'pk.webp',
         'pw.webp', 'pa.webp', 'pg.webp', 'py.webp', 'pe.webp', 'pl.webp', 'pt.webp', 'cg.webp', 'kr.webp',
         'mk.webp', 'ru.webp', 'rw.webp', 'ro.webp', 'sv.webp', 'ws.webp', 'sm.webp', 'st.webp', 'sa.webp',
         'sz.webp', 'sc.webp', 'sn.webp', 'vc.webp', 'kn.webp', 'lc.webp', 'rs.webp', 'sg.webp', 'sy.webp',
         'sk.webp', 'si.webp', 'us.webp', 'sb.webp', 'so.webp', 'sd.webp', 'sr.webp', 'sl.webp', 'tj.webp',
         'th.webp', 'tw.webp', 'tz.webp', 'tg.webp', 'to.webp', 'tt.webp', 'tv.webp', 'tn.webp', 'tm.webp',
         'tr.webp', 'ug.webp', 'uz.webp', 'ua.webp', 'uy.webp', 'fm.webp', 'fj.webp', 'fil.webp', 'fi.webp',
         'fr.webp', 'hr.webp', 'cf.webp', 'ck.webp', 'td.webp', 'me.webp', 'cz.webp', 'cl.webp', 'ch.webp',
         'se.webp', 'lk.webp', 'ec.webp', 'ecv.webp', 'er.webp', 'est.webp', 'ef.webp', 'uar.webp',
         'esu.webp', 'jm.webp', 'jp.webp']
flags_countries = {'au.webp': 'Австралия', 'al.webp': 'Албания', 'at.webp': 'Австрия', 'az.webp': 'Азербайджан',
                   'dz.webp': 'Алжир', 'ao.webp': 'Ангола', 'ad.webp': 'Андорра', 'ag.webp': 'Антигуа и Барбуда',
                   'ar.webp': 'Аргентина', 'am.webp': 'Армения', 'af.webp': 'Афганистан', 'bs.webp': 'Багамские '
                                                                                                     'Острова',
                   'bd.webp': 'Бангладеш', 'bb.webp': 'Барбадос', 'bh.webp': 'Бахрейн', 'bz.webp': 'Белиз',
                   'by.webp': 'Беларусь', 'be.webp': 'Бельгия', 'bj.webp': 'Бенин', 'bg.webp': 'Болгария',
                   'bo.webp': 'Боливия', 'ba.webp': 'Босния и Герцеговина', 'bw.webp': 'Ботсвана', 'br.webp':
                       'Бразилия', 'bn.webp': 'Бруней', 'bf.webp': 'Буркина-Фасо', 'bi.webp': 'Бурунди',
                   'bt.webp': 'Бутан', 'vu.webp': 'Вануату', 'va.webp': 'Ватикан', 'gb.webp': 'Великобритания',
                   'hu.webp': 'Венгрия', 've.webp': 'Венесуэла', 'tl.webp': 'Восточный Тимор', 'vn.webp':
                       'Вьетнам', 'ga.webp': 'Габон', 'ht.webp': 'Гаити', 'gy.webp': 'Гайана', 'gm.webp': 'Гамбия',
                   'gh.webp': 'Гана', 'gt.webp': 'Гватемала', 'gn.webp': 'Гвинея', 'gw.webp': 'Гвинея-Бисау',
                   'de.webp': 'Германия', 'hn.webp': 'Гондурас', 'ps.webp': 'Палестина', 'gd.webp': 'Гренада',
                   'gr.webp': 'Греция', 'ge.webp': 'Грузия', 'dk.webp': 'Дания',

                   'cd.webp': 'Демократическая Республика Конго', 'dj.webp': 'Джибути', 'dm.webp': 'Доминика',
                   'do.webp': 'Доминиканская республика', 'eg.webp': 'Египет', 'zm.webp': 'Замбия',
                   'eh.webp': 'Западная Сахара',
                   'zw.webp': 'Зимбабве', 'il.webp': 'Израиль', 'in.webp': 'Индия', 'id.webp': 'Индонезия',
                   'jo.webp': 'Иордания', 'iq.webp': 'Ирак',
                   'ir.webp': 'Иран', 'ie.webp': 'Ирландия', 'is.webp': 'Исландия', 'es.webp': 'Испания',
                   'it.webp': 'Италия', 'ye.webp': 'Йемен',
                   'cv.webp': 'Кабо-Верде', 'kz.webp': 'Казахстан', 'kh.webp': 'Камбоджа', 'cm.webp': 'Камерун',
                   'ca.webp': 'Канада', 'qa.webp': 'Катар',
                   'ke.webp': 'Кения', 'cy.webp': 'Кипр', 'kg.webp': 'Киргизия', 'ki.webp': 'Кирибати',
                   'cn.webp': 'Китай', 'kp.webp': 'КНДР',
                   'co.webp': 'Колумбия', 'km.webp': 'Коморские острова', 'xk.webp': 'Косово',
                   'cr.webp': 'Коста-Рика', 'ci.webp': 'Кот-д’Ивуар',
                   'cu.webp': 'Куба', 'kw.webp': 'Кувейт', 'la.webp': 'Лаос', 'lv.webp': 'Латвия',
                   'ls.webp': 'Лесото', 'lr.webp': 'Либерия', 'lb.webp': 'Ливан',
                   'ly.webp': 'Ливия', 'lt.webp': 'Литва', 'li.webp': 'Лихтенштейн', 'lu.webp': 'Люксембург',
                   'mu.webp': 'Маврикий', 'mr.webp': 'Мавритания',
                   'mg.webp': 'Мадагаскар', 'mw.webp': 'Малави', 'my.webp': 'Малайзия', 'ml.webp': 'Мали',
                   'mv.webp': 'Мальдивы', 'mt.webp': 'Мальта',
                   'ma.webp': 'Марокко', 'mh.webp': 'Маршалловы острова', 'mx.webp': 'Мексика', 'mz.webp': 'Мозамбик',
                   'md.webp': 'Молдавия',
                   'mc.webp': 'Монако', 'mn.webp': 'Монголия', 'mm.webp': 'Мьянма', 'na.webp': 'Намибия',
                   'nr.webp': 'Науру', 'np.webp': 'Непал',
                   'ne.webp': 'Нигер', 'ng.webp': 'Нигерия', 'nu.webp': 'Ниуэ', 'nl.webp': 'Нидерланды',
                   'ni.webp': 'Никарагуа', 'nz.webp': 'Новая Зеландия',
                   'no.webp': 'Норвегия', 'ae.webp': 'Объединённые Арабские Эмираты', 'om.webp': 'Оман',
                   'pk.webp': 'Пакистан', 'pw.webp': 'Палау',
                   'pa.webp': 'Панама', 'pg.webp': 'Папуа -- Новая Гвинея', 'py.webp': 'Парагвай', 'pe.webp': 'Перу',
                   'pl.webp': 'Польша',
                   'pt.webp': 'Португалия', 'cg.webp': 'Республика Конго', 'kr.webp': 'Республика Корея',
                   'mk.webp': 'Республика Македония',
                   'ru.webp': 'Россия', 'rw.webp': 'Руанда', 'ro.webp': 'Румыния', 'sv.webp': 'Сальвадор',
                   'ws.webp': 'Самоа', 'sm.webp': 'Сан-Марино',
                   'st.webp': 'Сан-Томе и Принсипи', 'sa.webp': 'Саудовская Аравия', 'sz.webp': 'Свазиленд',
                   'sc.webp': 'Сейшельсские острова',
                   'sn.webp': 'Сенегал', 'vc.webp': 'Сент-Винсент и Гренадины', 'kn.webp': 'Сент-Киттс и Невис',
                   'lc.webp': 'Сент-Люсия',
                   'rs.webp': 'Сербия', 'sg.webp': 'Сингапур', 'sy.webp': 'Сирия', 'sk.webp': 'Словакия',
                   'si.webp': 'Словения', 'us.webp': 'Соединённые '
                                                     'Штаты Америки',
                   'sb.webp': 'Соломоновы острова', 'so.webp': 'Сомали', 'sd.webp': 'Судан', 'sr.webp': 'Суринам',
                   'sl.webp': 'Сьерра-Леоне',
                   'tj.webp': 'Таджикистан', 'th.webp': 'Таиланд', 'tw.webp': 'Тайвань', 'tz.webp': 'Танзания',
                   'tg.webp': 'Того', 'to.webp': 'Тонга',
                   'tt.webp': 'Тринидад и Тобаго', 'tv.webp': 'Тувалу', 'tn.webp': 'Тунис', 'tm.webp': 'Туркменистан',
                   'tr.webp': 'Турция',
                   'ug.webp': 'Уганда', 'uz.webp': 'Узбекистан',
                   'ua.webp': 'Украина', 'uy.webp': 'Уругвай', 'fm.webp': 'Федеративные Штаты Микронезии',
                   'fj.webp': 'Фиджи',
                   'fil.webp': 'Филиппины',
                   'fi.webp': 'Финляндия',
                   'fr.webp': 'Франция', 'hr.webp': 'Хорватия', 'cf.webp': 'Центральноафриканская Республика',
                   'ck.webp': 'Острова Кука',
                   'td.webp': 'Чад', 'me.webp': 'Черногория', 'cz.webp': 'Чехия', 'cl.webp': 'Чили',
                   'ch.webp': 'Швейцария', 'se.webp': 'Швеция',
                   'lk.webp': 'Шри-Ланка',
                   'ec.webp': 'Эквадор',
                   'gq.webp': 'Экваториальная Гвинея', 'er.webp': 'Эритрея',
                   'ee.webp': 'Эстония', 'et.webp': 'Эфиопия',
                   'za.webp': 'Южно-Африканская Республика', 'ss.webp': 'Южный Судан',
                   'jm.webp': 'Ямайка', 'jp.webp': 'Япония'}

city_total = {}
cities_vk = {'Агра': 'photo-195623259_457240075',
             'Нур-Султан': 'photo-195623259_457240076',
             'Берлин': 'photo-195623259_457240080',
             'Венеция': 'photo-195623259_457240081',
             'Лондон': 'photo-195623259_457240082',
             'Нью-Дели': 'photo-195623259_457240085',
             'Нью-Йорк': 'photo-195623259_457240086',
             'Париж': 'photo-195623259_457240089',
             'Перу': 'photo-195623259_457240090',
             'Петра': 'photo-195623259_457240091',
             'Пиза': 'photo-195623259_457240092',
             'Рим': 'photo-195623259_457240093',
             'Рио-де-Жанейро': 'photo-195623259_457240094',
             'Санкт-Петербург': 'photo-195623259_457240095',
             'Сан-Франциско': 'photo-195623259_457240096',
             'Бомарис': 'photo-195623259_457240097',
             'Гуинет': 'photo-195623259_457240098',
             'Афины': 'photo-195623259_457240101',
             'Барселона': 'photo-195623259_457240102',
             'Будапешт': 'photo-195623259_457240103',
             'Шанхай': 'photo-195623259_457240104',
             'Дубай': 'photo-195623259_457240105',
             'Дублин': 'photo-195623259_457240106',
             'Флоренция': 'photo-195623259_457240107',
             'Гонконг': 'photo-195623259_457240108',
             'Иерусалим': 'photo-195623259_457240109',
             'Лиссабон': 'photo-195623259_457240110',
             'Голливуд': 'photo-195623259_457240111',
             'Мадрид': 'photo-195623259_457240112',
             'Мекка': 'photo-195623259_457240113',
             'Минск': 'photo-195623259_457240114',
             'Мюнхен': 'photo-195623259_457240115',
             'Прага': 'photo-195623259_457240116',
             'Самарканд': 'photo-195623259_457240117',
             'Сеул': 'photo-195623259_457240118',
             'Севилья': 'photo-195623259_457240119',
             'Сидней': 'photo-195623259_457240120'}

res_cities = ['Нур-Султан', 'Берлин', 'Лондон', 'Агра', 'Венеция', 'Нью-Дели', 'Нью-Йорк', 'Париж', 'Перу', 'Петра',
              'Пиза', 'Рим', 'Рио-де-Жанейро', 'Санкт-Петербург', 'Сан-Франциско', 'Бомарис', 'Гуинет', 'Афины',
              'Барселона', 'Будапешт', 'Шанхай', 'Дубай', 'Дублин', 'Флоренция', 'Гонконг', 'Иерусалим', 'Лиссабон',
              'Голливуд', 'Мадрид', 'Мекка', 'Минск', 'Мюнхен', 'Прага', 'Самарканд', 'Сеул', 'Севилья', 'Сидней']

vk_cities = {'photo-195623259_457240075': ['Агра', 'Тадж-Махал — мавзолей-мечеть, находящийся в Агре, Индия'],
             'photo-195623259_457240076': ['Нур-Султан', 'Крупный торгово-развлекательный центр в столице Казахстана Нур-Султане'],
             'photo-195623259_457240077': ['Нур-Султан', 'Монумент в столице Казахстана Нур-Султане, самая главная и '
                                                         'узнаваемая достопримечательность города'],
             'photo-195623259_457240078': ['Нур-Султан', 'Музей первого президента Республики Казахстан в городе '
                                                         'Нур-Султан'],
             'photo-195623259_457240079': ['Нур-Султан', 'Этно-мемориальный комплекс "Карта Казахстана "Атамекен"'],
             'photo-195623259_457240080': ['Берлин', 'Бранденбургские ворота — единственные '
                                                     'сохранившиеся городские ворота Берлина, главный символ города'],
             'photo-195623259_457240081': ['Венеция', 'Гранд-канал — самая известная протока в Венеции между '
                                                      'островами лагуны'],
             'photo-195623259_457240082': ['Лондон', 'Биг-Бен — популярное туристическое название часовой башни '
                                                     'Вестминстерского дворца в Лондоне.'],
             'photo-195623259_457240083': ['Лондон', 'Лондонский глаз. Колесо обозрения в Лондоне, расположенное в '
                                                     'районе Ламбет на южном берегу Темзы. Крупнейшее в Европе и одно из крупнейших в мире.'],
             'photo-195623259_457240085': ['Нью-Дели', 'Храм Лотоса. Главный храм религии Бахаи в Индии и '
                                                       'сопредельных странах, построенный в 1986 году.'],
             'photo-195623259_457240086': ['Нью-Йорк', 'Статуя Свободы. Колоссальная скульптура в стиле '
                                                       'неоклассицизма, расположенная в США на острове Свободы'],
             'photo-195623259_457240089': ['Париж', 'Собор Парижской Богоматери. Католический храм в центре Парижа, '
                                                    'один из символов французской столицы'],
             'photo-195623259_457240090': ['Перу', 'Мачу-Пикчу. Город древней Америки, находящийся на территории '
                                                   'современного Перу'],
             'photo-195623259_457240091': ['Петра', 'Петра - это древний город, столица набатейского царства, '
                                                    'расположенный на территории современной Иордании.'],
             'photo-195623259_457240092': ['Пиза', 'Пизанская башня. Часть ансамбля городского собора '
                                                   'Санта-Мария-Ассунта в городе Пиза, получившая всемирную '
                                                   'известность благодаря непреднамеренному наклону'],
             'photo-195623259_457240093': ['Рим', 'Колизей. Амфитеатр, памятник архитектуры Древнего Рима, '
                                                  'наиболее известное и одно из самых грандиозных сооружений Древнего мира, сохранившихся до нашего времени'],
             'photo-195623259_457240094': ['Рио-де-Жанейро', 'Статуя Христа-Искупителя. Является символом '
                                                             'Рио-де-Жанейро и Бразилии в целом'],
             'photo-195623259_457240095': ['Санкт-Петербург', 'Эрмитаж. Музей изобразительного и '
                                                              'декоративно-прикладного искусства, расположенный в '
                                                              'городе Санкт-Петербург'],
             'photo-195623259_457240096': ['Сан-Франциско', 'Мост Золотые Ворота. Висячий мост через пролив Золотые '
                                                            'Ворота.'],
             'photo-195623259_457240097': ['Бомарис', 'Замок Бомарис. Бомарис - один из замков, построенных королём '
                                                      'Эдуардом I для того, чтобы усилить английское влияние в '
                                                      'Уэльсе.'],
             'photo-195623259_457240098': ['Гуинет', 'Замок Харлех. Был построен Эдуардом I во время его вторжения в '
                                                     'Уэльс между 1282 и 1289'],
             'photo-195623259_457240101': ['Афины', 'Парфенон — памятник античной архитектуры, древнегреческий храм, '
                                                    'расположенный на афинском Акрополе'],
             'photo-195623259_457240102': ['Барселона', 'Саграда Фамилия. Церковь в Барселоне, в районе Эшампле, '
                                                        'строящаяся на частные пожертвования начиная с 1882 года; '
                                                        'знаменитый проект Антонио Гауди.'],
             'photo-195623259_457240103': ['Будапешт', 'Резиденция парламента Венгрии на берегу Дуная в Будапеште. В '
                                                       'его архитектуре причудливо сплелись элементы неоготики по '
                                                       'образцу Вестминстерского дворца и влияние парижского боз-ара.'],
             'photo-195623259_457240104': ['Шанхай', 'Шанхайский всемирный финансовый центр. Небоскрёб в Шанхае, '
                                                     'строительство которого было завершено летом 2008. Высота центра составляет 492 м, таким образом, это одиннадцатый по высоте небоскрёб в мире и шестой по высоте в Азии.'],
             'photo-195623259_457240105': ['Дубай', 'Небоскрёб Бурдж-Халифа. Сверхвысотный небоскрёб высотой 828 '
                                                    'метров в Дубае, самое высокое и самое многоэтажное здание, самое высокое сооружение, единственный 828-метровый и 163-этажный небоскрёб в мире'],
             'photo-195623259_457240106': ['Дублин', 'Дублинский замок. Главный правительственный комплекс зданий в Дублине. До 1922 года - главный форпост Британии в Ирландии.'],
             'photo-195623259_457240107': ['Флоренция', 'Санта-Мария-дель-Фьоре. Кафедральный собор во Флоренции, '
                                                        'самое знаменитое из архитектурных сооружений флорентийского кватроченто.'],
             'photo-195623259_457240108': ['Гонконг', 'Пик Виктория - это самая высокая точка острова Гонконг, его высота 552 метра.'],
             'photo-195623259_457240109': ['Иерусалим', 'Стена Плача (Западная Стена) – это уцелевшая часть старинного укрепительного сооружения в Старом городе Иерусалима.'],
             'photo-195623259_457240110': ['Лиссабон', 'Укреплённое сооружение на острове в реке Тежу в одноимённом районе Лиссабона. Построена в 1515-1521 годах Франсишку де Аррудой в честь открытия Васко да Гама морского пути в Индию'],
             'photo-195623259_457240111': ['Голливуд', 'Традиционно Голливуд ассоциируется с американской киноиндустрией, поскольку в этом районе находится много киностудий и живут многие известные киноактёры.'],
             'photo-195623259_457240112': ['Мадрид', 'Королевский дворец в Мадриде. Официальная резиденция королей Испании. Расположена в западной части Мадрида.'],
             'photo-195623259_457240113': ['Мекка', 'Кааба. Мусульманская святыня в виде кубической постройки во внутреннем дворе мечети Масджид аль-Харам в Мекке.'],
             'photo-195623259_457240114': ['Минск', 'Древняя деревянная крепость, положившая начало Минску, центральное и основное сооружение Минского Замчища. Возведён во второй половине XI века.'],
             'photo-195623259_457240115': ['Мюнхен', 'Музей, посвящённый истории BMW, расположенный в Мюнхене, Германия возле здания штаб-квартиры BMW. В музее представлена экспозиция автомобилей и мотоциклов BMW за всю историю марки.'],
             'photo-195623259_457240116': ['Прага', 'Средневековый мост(Карлов мост) в Праге через реку Влтаву, '
                                                    'соединяющий исторические районы Мала Страна и Старое Место.'],
             'photo-195623259_457240117': ['Самарканд', 'Регистан. Площадь в центре Самарканда. «Регистаном» называли главные площади в городах Среднего Востока.'],
             'photo-195623259_457240118': ['Сеул', 'Сеульская телебашня. Символ Сеула.'],
             'photo-195623259_457240119': ['Севилья', 'Площадь Испании. Визитная карточка Севильи. Она представляет собой огромную площадь, которая окружена полукруглым зданием с башнями по обоим концам.'],
             'photo-195623259_457240120': ['Сидней', 'Сиднейский оперный театр. Одно из самых известных и узнаваемых '
                                                     'в мире зданий, является символом самого крупного города Австралии – Сиднея.']
             }

small_letters = ["а", "б", "в", "г", "д", "е", "ж", "з", "и", "й", "к", "л", "м",
                 "н", "о", "п", "р", "с", "т", "у", "ф", "х", "ц", "ч", "ш", "щ",
                 "ъ", "ы", "ь", "э", "ю", "я"]
big_letters = ["А", "Б", "В", "Г", "Д", "Е", "Ж", "З", "И", "Й", "К", "Л", "М",
               "Н", "О", "П", "Р", "С", "Т", "У", "Ф", "Х", "Ц", "Ч", "Ш", "Щ",
               "Ъ", "Ы", "Ь", "Э", "Ю", "Я"]

longpoll = VkBotLongPoll(vk_session, 187194307) # 195623259''
vk = vk_session.get_api()
vk1 = vk_api.VkApi(token='a003e050db502dd3dcead8e6b4cfea65ad94358d41d2966e3b3fbf17e427df404080baebefb5bc1570a1a').get_api()
weekday = {'0': 'понедельник',
           '1': 'вторник',
           '2': 'среда',
           '3': 'четверг',
           '4': 'пятница',
           '5': 'суббота',
           '6': 'воскресенье',}
def job():
    vk.messages.send(  # Отправляем сообщение
        peer_id=my_id,
        random_id=get_random_id(),
        message="I'm working"
    )

def twist_image(input_file_name, output_file_name):
    im = Image.open(input_ﬁle_name)
    pixels = im.load()
    x, y = im.size
    for i in range(x // 2):
        for j in range(y):
            pixels[i, j], pixels[x // 2 + i, j] = pixels[x // 2 + i, j], pixels[i, j]
    im.save(output_ﬁle_name)

def transparency(filename1, filename2, proc):
    im = Image.open(filename1)
    pixels = im.load()
    im2 = Image.open(filename2)
    x, y = im.size
    im2 = im2.resize((x, y))
    pixels2 = im2.load()
    for i in range(x):
        for j in range(y):
            R1, G1, B1 = pixels[i, j]
            R2, G2, B2 = pixels2[i, j]
            R = int(0.5 * R1 + (proc / 100) * R2)
            G = int(0.5 * G1 + (proc / 100) * G2)
            B = int(0.5 * B1 + (proc / 100) * B2)
            pixels[i, j] = R, G, B
    im.save("3.jpg")

def nakl_ban(filename1, filename2):
    print("da")
    print(filename1, filename2)
    im = Image.open(filename1)
    im2 = Image.open(filename2)
    x, y = im.size
    im.paste(im, (0, 0), im)
    ig.show()
    im.save("3.jpg")

def twist_image(input_file_name, output_file_name):
    im = Image.open(input_file_name)
    x, y = im.size
    im2 = im.crop((0, 0, x // 2, y)).transpose(Image.FLIP_LEFT_RIGHT)
    im3 = im.crop((x // 2, 0, x, y)).transpose(Image.FLIP_LEFT_RIGHT)
    img = Image.new('RGB', (x, y))
    img.paste(im2, (0, 0))
    img.paste(im3, (x // 2, 0))
    img.save(output_file_name)

def curve(pixel):
    r, g, b = pixel
    brightness = r + g + b
    if brightness < 60:
        try:
            k = 60 / brightness
        except ZeroDivisionError:
            k = 0
        return min(255, int(r * k ** 2)), \
               min(255, int(g * k ** 2)),\
               min(255, int(b * k ** 2))
    else:
        return r, g, b

def job2():
    request = requests.get(
        "https://sinoptik.com.ru/погода-москва")
    b = bs4.BeautifulSoup(request.text, "html.parser")
    head = b.find('div', class_="min").find('b').text.strip()
    head2 = b.find('div', class_="max").find('b').text.strip()
    y = b.find('p', class_="weather__content_tab-date day_red").text.strip()
    x = b.find('p', class_="weather__content_tab-month").text.strip()
    now = b.find('div', class_="weather__article_main_temp").text.strip()
    description = b.find('label', class_="show-tooltip").text.strip()
    up = b.find('div', class_="ss_wrap ru").text.strip().split()[1]
    back = b.find('div', class_="ss_wrap ru").text.strip().split()[3]
    print(x, y, head)
    vk.messages.send(  # Отправляем сообщение
        peer_id=my_id,
        random_id=get_random_id(),
        message=f'Погода в Москве на {y} {x}' + ":" + f"\nСейчас: {now}" + f"\nМинимальная: {head}" + f"\nМаксимальная: {head2}" + f"\n\nОписание: {description}" + f"\nВосход Солнца: {up}" + f"\nЗаход Солнца: {back}"
    )
    vk.messages.send(  # Отправляем сообщение
        peer_id=my_id,
        random_id=get_random_id(),
        message="Доброе утро"
    )

def weather(user2, pols):
    dict1[pols] = {'action': 'weather'}
    vk.messages.send(  # Отправляем сообщение
        peer_id=user2,
        attachment='photo-195623259_457239099',
        random_id=get_random_id(),
        message='Введите город в котором хотите узнать погоду'
    )
    print(dict1)
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                event.message.text) > 0 and event.message.from_id in dict1:
            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                del dict1[event.message.from_id]
                viki(event.message.peer_id, event.message.from_id)
                break
            elif "Погода🌦" in event.message.text:
                del dict1[event.message.from_id]
                weather(event.message.peer_id, event.message.from_id)
                break
            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                del dict1[event.message.from_id]
                chesar(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                del dict1[event.message.from_id]
                magic_ball(event.message.peer_id, event.message.from_id)
                break
            elif 'Русский язык📚' in event.message.text:
                del dict1[event.message.from_id]
                russian(event.message.peer_id)
                break
            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                del dict1[event.message.from_id]
                maths(event.message.peer_id)
                break
            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                del dict1[event.message.from_id]
                profil(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                del dict1[event.message.from_id]
                tech(event.message.peer_id, event.message.from_id)
                break
            elif 'далее' in event.message.text.lower():
                del dict1[event.message.from_id]
                next(event.message.peer_id)
                break
            elif 'обратно' in event.message.text.lower():
                del dict1[event.message.from_id]
                back(event.message.peer_id)
                break
            elif "Обратно в меню" not in event.message.text:
                try:
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Ввести ещё город', color=VkKeyboardColor.PRIMARY)
                    geocoder_request = f"http://geocode-maps.yandex.ru/1.x/?apikey=40d1649f-0493-4b70-98ba-98533de7710b" \
                                       f"&geocode={event.message.text}&format=json"
                    response1 = requests.get(geocoder_request)
                    json_response = response1.json()
                    toponym = json_response["response"]["GeoObjectCollection"]["featureMember"][0]["GeoObject"]
                    toponym_coodrinates = toponym["Point"]["pos"]
                    response = requests.get(
                        f"https://api.weather.yandex.ru/v2/forecast?lat="
                        f"{toponym_coodrinates.split()[1]}&lon={toponym_coodrinates.split()[0]}&lang=ru_RU",
                        headers={'X-Yandex-API-Key': '370840cf-c329-4e15-86fd-4ba66514b871'}).json()
                    vk.messages.send(  # Отправляем сообщение
                    peer_id=event.message.peer_id,
                    random_id=get_random_id(),
                    keyboard=keyboard.get_keyboard(),
                    message=f'Погода в {event.message.text.capitalize()} на {str(response["now_dt"]).split("T")[0]}:\n'
                            f'Температура: {response["fact"]["temp"]}°C\n'
                           f'Давление: {response["fact"]["pressure_mm"]}мм.рт.ст\n'
                           f'Влажность: {response["fact"]["humidity"]}%\n'
                           f'{response["fact"]["condition"]}\n'
                           f'Ветер: {response["fact"]["wind_dir"]} {response["fact"]["wind_speed"]}м/с'
                    )
                    del dict1[event.message.from_id]
                    break
                except:
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Ввести ещё город', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Пока что погода не работает'
                    )
                    del dict1[event.message.from_id]
                    break


def maths(user6):
    keyboard = VkKeyboard(one_time=False, inline=True)
    keyboard.add_button('&#128200;Построить график функции&#128201;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('&#128312;Решить уравнение&#128312;', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button('&#10133;Действия с многочленами&#10134;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('&#10006;Действия с дробями&#10135;', color=VkKeyboardColor.DEFAULT)
    keyboard.add_line()
    keyboard.add_button('&#128202;Статистика', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button('Простое ли число?&#128290;', color=VkKeyboardColor.POSITIVE)
    vk.messages.send(
        peer_id=user6,
        attachment='photo-195623259_457239093',
        random_id=get_random_id(),
        keyboard=keyboard.get_keyboard(),
        message="Выберите одну из доступных опций и нажмите соответствующую кнопку.")

def chesar(user3, person):
    dict1[person] = {'action': 'chesar'}
    vk.messages.send(  # Отправляем сообщение
        peer_id=user3,
        attachment='photo-195623259_457239102',
        random_id=get_random_id(),
        message='&#10069; Введите фразу на русском языке И число позиций, на которые нужно сдвинуть каждую из букв\n*************\nЧтобы сдвинуть вправо введите число >0; Чтобы сдвинуть влево введите число <0\n*********************\nв формате:\n<Фраза> && <число позиций>\nПример: привет && -7'
    )
    print(dict1)
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                del dict1[event.message.from_id]
                viki(event.message.peer_id, event.message.from_id)
                break
            elif "Погода🌦" in event.message.text:
                del dict1[event.message.from_id]
                weather(event.message.peer_id, event.message.from_id)
                break
            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                del dict1[event.message.from_id]
                chesar(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                del dict1[event.message.from_id]
                magic_ball(event.message.peer_id, event.message.from_id)
                break
            elif 'Русский язык📚' in event.message.text:
                del dict1[event.message.from_id]
                russian(event.message.peer_id)
                break
            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                del dict1[event.message.from_id]
                maths(event.message.peer_id)
                break
            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                del dict1[event.message.from_id]
                profil(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                del dict1[event.message.from_id]
                tech(event.message.peer_id, event.message.from_id)
                break
            elif 'далее' in event.message.text.lower():
                del dict1[event.message.from_id]
                next(event.message.peer_id)
                break
            elif 'обратно' in event.message.text.lower():
                del dict1[event.message.from_id]
                back(event.message.peer_id)
                break
            elif 'Обратно в меню🔙' not in event.message.text:
                if 'Зашифровать ещё слово🔄' not in event.message.text:
                    try:
                        keyboard = VkKeyboard(one_time=False, inline=True)
                        keyboard.add_button('Зашифровать ещё слово&#128260;', color=VkKeyboardColor.PRIMARY)
                        res_string = ""
                        for i in range(len(str(event.message.text.split(" && ")[0]))):
                            if str(event.message.text.split(" && ")[0])[i] in small_letters:
                                res_string += small_letters[
                                    (small_letters.index(str(event.message.text.split(" && ")[0])[i]) + int(
                                        event.message.text.split(" && ")[1])) % len(small_letters)]
                            elif str(event.message.text.split(" && ")[0])[i] in big_letters:
                                res_string += big_letters[(big_letters.index(
                                    str(event.message.text.split(" && ")[0])[i]) + int(
                                    event.message.text.split(" && ")[1])) % len(big_letters)]
                            else:
                                res_string += str(event.message.text.split(" && ")[0])[i]
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            keyboard=keyboard.get_keyboard(),
                            message="Получившаяся зашифрованная фраза: " + str(res_string)
                        )
                        del dict1[event.message.from_id]
                        break
                    except:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            keyboard=keyboard.get_keyboard(),
                            message="Вы ввели в неверном формате!"
                        )
                        break
                else:
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Зашифровать ещё слово&#128260;', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='&#10069; Введите команду в том же формате:\n<Фраза> && <число позиций>'
                    )

def foo(spisok):
    res = []
    a, w, s, d = random.choices(spisok, k=4)
    if a == w or a == s or a == d or w == s or w == d or s == d:
        foo(spisok)
    else:
        res.append(a)
        res.append(w)
        res.append(s)
        res.append(d)
        return res

def magic_ball(user4, pers):
    dict1[pers] = {'action': 'magic_ball'}
    vk.messages.send(  # Отправляем сообщение
        peer_id=user4,
        attachment='photo-195623259_457239101',
        random_id=get_random_id(),
        message='Введите Ваш вопрос'
    )
    print(dict1)
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                del dict1[event.message.from_id]
                viki(event.message.peer_id, event.message.from_id)
                break
            elif "Погода🌦" in event.message.text:
                del dict1[event.message.from_id]
                weather(event.message.peer_id, event.message.from_id)
                break
            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                del dict1[event.message.from_id]
                chesar(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                del dict1[event.message.from_id]
                magic_ball(event.message.peer_id, event.message.from_id)
                break
            elif 'Русский язык📚' in event.message.text:
                del dict1[event.message.from_id]
                russian(event.message.peer_id)
                break
            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                del dict1[event.message.from_id]
                maths(event.message.peer_id)
                break
            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                del dict1[event.message.from_id]
                profil(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                del dict1[event.message.from_id]
                tech(event.message.peer_id, event.message.from_id)
                break
            elif 'далее' in event.message.text.lower():
                del dict1[event.message.from_id]
                next(event.message.peer_id)
                break
            elif 'обратно' in event.message.text.lower():
                del dict1[event.message.from_id]
                back(event.message.peer_id)
                break
            elif 'Обратно в меню🔙' not in event.message.text:
                if 'Задать ещё вопрос🔄' not in event.message.text:
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Задать ещё вопрос&#128260;', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='&#10067;Ваш вопрос: ' + str(
                            event.message.text) + '\n\n&#128172;Ответ: ' + str(random.choice(choices))
                    )
                    del dict1[event.message.from_id]
                    break
                else:
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Введите Ваш вопрос'
                    )
    print(dict1)

def russian(user5):
    keyboard = VkKeyboard(one_time=False, inline=True)
    keyboard.add_button('&#128312;Склонять&#128312;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('&#128313;Спрягать&#128313;', color=VkKeyboardColor.POSITIVE)
    vk.messages.send(
        peer_id=user5,
        attachment='photo-195623259_457239097',
        random_id=get_random_id(),
        keyboard=keyboard.get_keyboard(),
        message="Выберите одну из доступных опций и нажмите соответствующую кнопку.")

def viki(user, user2):
    dict1[user2] = {'action': 'wiki'}
    vk.messages.send(
        peer_id=user,
        attachment='photo-195623259_457239098',
        random_id=get_random_id(),
        message='Введите запрос для поиска слова&#128270;'  # Пишем "Введите запрос"
    )
    print(dict1)
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
            print(dict1)
            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                del dict1[event.message.from_id]
                viki(event.message.peer_id, event.message.from_id)
                break
            elif "Погода🌦" in event.message.text:
                del dict1[event.message.from_id]
                weather(event.message.peer_id, event.message.from_id)
                break
            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                del dict1[event.message.from_id]
                chesar(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                del dict1[event.message.from_id]
                magic_ball(event.message.peer_id, event.message.from_id)
                break
            elif 'Русский язык📚' in event.message.text:
                del dict1[event.message.from_id]
                russian(event.message.peer_id)
                break
            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                del dict1[event.message.from_id]
                maths(event.message.peer_id)
                break
            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                del dict1[event.message.from_id]
                profil(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                del dict1[event.message.from_id]
                tech(event.message.peer_id, event.message.from_id)
                break
            elif 'далее' in event.message.text.lower():
                del dict1[event.message.from_id]
                next(event.message.peer_id)
                break
            elif 'обратно' in event.message.text.lower():
                del dict1[event.message.from_id]
                back(event.message.peer_id)
                break
            elif 'Обратно в меню🔙' not in event.message.text:
                if 'Ввести ещё слово🔃' not in event.message.text:
                    if event.message.from_id:
                        try:
                            keyboard = VkKeyboard(one_time=False, inline=True)
                            keyboard.add_button('Ввести ещё слово&#128259;', color=VkKeyboardColor.PRIMARY)
                            keyboard.inline = True
                            vk.messages.send(  # Если написали в ЛС
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message='Вот что я нашёл: \n\n' + str(wikipedia.summary(event.message.text))
                                # Пишем "Вот что я нашёл" И то что вернёт нам api Wikipedia по запросу текста сообщения
                            )
                            del dict1[event.message.from_id]
                            break
                        except wikipedia.exceptions.PageError:
                            vk.messages.send(  # Если написали в ЛС
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message='Извините, слово в википедии не найдено&#128550;'
                            )
                            break
                        except wikipedia.exceptions.DisambiguationError as e:
                            vk.messages.send(  # Если написали в ЛС
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message=str(e)
                            )
                            vk.messages.send(  # Если написали в ЛС
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message='&#10071; Введённое Вами слово неоднозначно!&#128550;'
                            )
                            print(dict1)
                            break
                        except vk_api.exceptions.ApiError as exc:
                            if exc.code == 914:
                                vk.messages.send(  # Если написали в ЛС
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message='Извините, по Вашему запросу в Википедии ОЧЕНЬ много информации!'
                            )
                            break
                else:
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='Введите запрос для поиска слова&#128270;'  # Пишем "Введите запрос"
                    )
    print(dict1)

def profil(user7, user8):
    keyboard = VkKeyboard(one_time=False, inline=True)
    file = open("test.txt", "r")
    x = file.readline().split(", ")
    request = requests.get(
        "https://vk.com/foaf.php?id=" + str(user8))
    b = bs4.BeautifulSoup(request.text, "html.parser")
    head = b.find('ya:created')
    print(str(head)[21:31])
    #head2 = b.find('div', class_="max").find('b').text.strip()
    if str(user8) in x:
        y = "&#9989; Подписка на рассылки: ВКЛючена"
        keyboard.add_button('Отписаться от рассылок', color=VkKeyboardColor.NEGATIVE)
    else:
        y = "&#10062; Подписка на рассылки: ВЫКЛючена"
        keyboard.add_button('Подписаться на рассылки', color=VkKeyboardColor.POSITIVE)
    try:
        city = vk.users.get(user_id=user8, fields="city")[0]["city"]['title']
    except:
        city = "Город не указан"
    try:
        birthday = vk.users.get(user_id=user8, fields="bdate")[0]["bdate"]
    except:
        birthday = "День Рождения не указан"
    ssilka = vk.users.get(user_id=user8, fields="screen_name")[0]["screen_name"]
    utc = arrow.utcnow()
    local = utc.to('Europe/Moscow')
    data_reg = str(head)[21:31].split('-')
    month = data_reg[1]
    reg_month = month_birthday[month]
    vk.messages.send(
        peer_id=user7,
        attachment='photo-195623259_457239095',
        random_id=get_random_id(),
        keyboard=keyboard.get_keyboard(),
        message=f', Ваш Профиль:\n{y}\n&#128197; Дата регистрации в ВКонтакте: '
                                       f'{data_reg[2]} {reg_month} {data_reg[0]} года\n&#127380; Ваш id: ' + str(
            user8) + f'\n&#127874;Ваш День Рождения: {birthday}' + '\n&#128279; Ваша короткая ссылка: ' + str(
            ssilka) + '\n&#127961; Город, указанный в Вашем профиле: ' + str(
            city) + '\n&#9200; Московское время: ' + str(
            local.format('HH:mm:ss'))
    )
def back(user57):
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('&#128207;Математика&#128208;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('Русский язык&#128218;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('Переводчик&#127891;', color=VkKeyboardColor.PRIMARY)
    keyboard.add_button('Погода&#127782;', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button('Обработка фотографий&#128248;', color=VkKeyboardColor.DEFAULT)
    keyboard.add_button('Далее', color=VkKeyboardColor.DEFAULT)
    vk.messages.send(  # Отправляем сообщение
        peer_id=user57,
        attachment='photo-195623259_457239094',
        random_id=get_random_id(),
        keyboard=keyboard.get_keyboard(),
        message='Привет, ты зашёл в меню группы [orange__bot|Бот Апельсин]! Нажимай на одну из кнопок '
                'ниже&#128521; '
    )
def next(user0):
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('Шар судьбы&#128302;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('Шифр Цезаря&#128288;', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button('Профиль&#128100;', color=VkKeyboardColor.PRIMARY)
    keyboard.add_button('Техподдержка&#9881;', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button('Обратно', color=VkKeyboardColor.DEFAULT)
    keyboard.add_button('Wikipedia&#127891;', color=VkKeyboardColor.DEFAULT)
    keyboard.add_line()
    keyboard.add_button('&#10071;Викторины&#10067;', color=VkKeyboardColor.POSITIVE)
    vk.messages.send(  # Отправляем сообщение
        peer_id=user0,
        attachment='photo-195623259_457239094',
        random_id=get_random_id(),
        keyboard=keyboard.get_keyboard(),
        message='Привет, ты зашёл в меню группы [orange__bot|Бот Апельсин]! Нажимай на одну из кнопок '
                'ниже&#128521; '
    )


def knb(num):
    p = []
    for el in dict2.keys():
        p.append(el.split())
    if len(p) > 0:
        for i in p:
            for j in i:
                if int(j) == num:
                    return int(i[1])
    else:
        return -1
def knb0(num):
    p = []
    for el in dict2.keys():
        p.append(el.split())
    if len(p) > 0:
        for i in p:
            for j in i:
                if int(j) == num:
                    return int(i[0])
    else:
        return -1
def knb2(num):
    p = []
    for el in dict2.keys():
        p.append(el.split())
    if len(p) > 0:
        for i in p:
            for j in i:
                if int(j) == num:
                    return i
    else:
        return -1
def knb3(num):
    count = -1
    p = []
    for el in dict2.keys():
        p.append(el.split())
    if len(p) > 0:
        for i in p:
            for j in i:
                print(j)
                count += 1
                if int(j) == num:
                    return count
    else:
        return -1
def knb_next(num):
    count = -1
    p = []
    for el in dict2.keys():
        p.append(el.split())
    if len(p) > 0:
        for i in p:
            for j in i:
                print(j)
                count += 1
                if int(j) == num:
                    if count == 0:
                        return i[1]
                    else:
                        return i[0]
    else:
        return -1
def tech(user9, user10):
    dict1[user10] = {'action': 'report'}
    name_padej = vk.users.get(user_ids=user10, name_case="gen")[0]['first_name']
    vk.messages.send(
        peer_id=user9,
        attachment='photo-195623259_457239100',
        random_id=get_random_id(),
        message='&#129302; Если Вы хотите написать администратору, то отправьте ответное сообщение в '
                                       'формате:' + '\n\t\tРепорт <сообщение> '
    )
    print(dict1)

    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                del dict1[event.message.from_id]
                viki(event.message.peer_id, event.message.from_id)
                break
            elif "Погода🌦" in event.message.text:
                del dict1[event.message.from_id]
                weather(event.message.peer_id, event.message.from_id)
                break
            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                del dict1[event.message.from_id]
                chesar(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                del dict1[event.message.from_id]
                magic_ball(event.message.peer_id, event.message.from_id)
                break
            elif 'Русский язык📚' in event.message.text:
                del dict1[event.message.from_id]
                russian(event.message.peer_id)
                break
            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                del dict1[event.message.from_id]
                maths(event.message.peer_id)
                break
            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                del dict1[event.message.from_id]
                profil(event.message.peer_id, event.message.from_id)
                break
            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                del dict1[event.message.from_id]
                tech(event.message.peer_id, event.message.from_id)
                break
            elif 'далее' in event.message.text.lower():
                del dict1[event.message.from_id]
                next(event.message.peer_id)
                break
            elif 'обратно' in event.message.text.lower():
                del dict1[event.message.from_id]
                back(event.message.peer_id)
                break
            elif "Репорт" in event.message.text or "репорт" in event.message.text:
                vk.messages.send(  # Если написали в ЛС
                    peer_id=my_id,
                    random_id=get_random_id(),
                    message="&#128172; В техподдержку поступило новое обращение от " + "[id" + str(
                        event.message.from_id) + "|" + str(
                        name_padej) + "]" + ".\n\n" + "Обращение: «" + event.message.text + "»"
                )

                vk.messages.send(  # Если написали в ЛС
                    peer_id=event.message.peer_id,
                    random_id=get_random_id(),
                    message="Ваше сообщение было доставлено администратору!&#128110;"
                )
                del dict1[event.message.from_id]
                break
            else:
                del dict1[event.message.from_id]
                break

def main(name):
    # url = vk.users.get(user_ids=user.id, fields='photo_400_orig')[0]['photo_400_orig']
    attachments = []
    upload = VkUpload(vk_session)
    image = open(name, 'rb')
    photo = upload.photo_messages(photos=image)[0]
    attachments.append('photo{}_{}'.format(photo['owner_id'], photo['id']))
    return attachments

def audi(name,  x):
    print("sc")
    attachments = []
    upload = VkUpload(vk_session)
    aud = open(name)
    audio = upload.audio_message(audio=aud, peer_id=x, group_id=195623259)
    print(audio)
    attachments.append('audiomessage{}_{}'.format(audio['owner_id'], audio['id']))
    return attachments

def f():
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                event.message.text) > 0:
            a = time.time()
            print(event)
            try:
                print(vk.messages.getHistory(user_id=157682761, count=1)['items'][0]['attachments'][0]['audio']['url'])
                urlretrieve(
                    str(vk.messages.getHistory(user_id=157682761, count=1)['items'][0]['attachments'][0]['audio']['url']),
                    "1.mp3")
                vk.messages.send(  # Если написали в ЛС
                    peer_id=event.message.peer_id,
                    random_id=get_random_id(),
                    attachment=', '.join(audi("1.mp3", event.message.peer_id)),
                    message="Аудио бан"
                )

            except:
                pass
            if event.type == VkBotEventType.GROUP_LEAVE:
                y = []
                file = open("test.txt", "r")
                x = file.readline().split(", ")
                print(x)
                for el in x:
                    if el == str(event.object.user_id):
                        continue
                    else:
                        y.append(el)
                y = ", ".join(y)
                print(y)
                file = open("test.txt", "w")
                file.write(y)
                file.close()

                vk.messages.send(  # Отправляем сообщение
                    peer_id=event.object.user_id,
                    random_id=get_random_id(),
                    message="[id" + str(event.object.user_id) + "|" + str(
                        vk.users.get(user_ids=event.object.user_id)[0][
                            'first_name']) + "]" + ', жаль, что прощаемся! &#128546; &#128075;'
                )
            elif event.type == VkBotEventType.GROUP_JOIN:
                file = open("test.txt", "r")
                z = file.readline()
                file.close()

                file = open("test.txt", "w")
                file.write(z + ', ' + str(event.object.user_id))
                file.close()
                file = open("test.txt", "r")
                z = file.readline()
                print(z)
                file.close()
                try:
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.object.user_id,
                        random_id=get_random_id(),
                        message="&#128080;" + "[id" + str(event.object.user_id) + "|" + str(
                            vk.users.get(user_ids=event.object.user_id)[0][
                                'first_name']) + "]" + ', добро пожаловать в '
                                                       'группу ['
                                                       'orange__bot|Бот Апельсин]! Чтобы '
                                                       'увидеть меню, '
                                                       'напиши меню &#128080;'
                                                        )
                except:
                    pass
            elif event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and event.message.from_id > 0:  # and event.message.peer_id < 2E9
                if event.message.text.lower() == 'меню' or event.message.text == 'Обратно в меню' or 'Обратно в меню🔙' in event.message.text or 'начать' in event.message.text.lower() or "Обратно" in event.message.text:  # Если написали заданную фразу
                    if event.message.from_id:  # Если написали в ЛС
                        keyboard = VkKeyboard(one_time=False)
                        keyboard.add_button('&#128207;Математика&#128208;', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_button('Русский язык&#128218;', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_line()
                        keyboard.add_button('Переводчик&#127891;', color=VkKeyboardColor.PRIMARY)
                        keyboard.add_button('Погода&#127782;', color=VkKeyboardColor.PRIMARY)
                        keyboard.add_line()
                        keyboard.add_button('Обработка фотографий&#128248;', color=VkKeyboardColor.DEFAULT)
                        keyboard.add_button('Далее', color=VkKeyboardColor.DEFAULT)
                        keyboard.add_line()
                        keyboard.add_button('Камень-ножницы-бумага', color=VkKeyboardColor.PRIMARY)
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            attachment='photo-195623259_457239094',
                            random_id=get_random_id(),
                            keyboard=keyboard.get_keyboard(),
                            message='Привет, ты зашёл в меню группы [orange__bot|Бот Апельсин]! Нажимай на одну из кнопок '
                                                           'ниже&#128521; '
                        )
                        print(keyboard.get_keyboard())
                        print(int((time.time() - a) * 1000), 'ms')
                elif "камень-ножницы-бумага" in event.message.text.lower():
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='Приветствуем в игре камень-ножницы-бумага. Чтобы вызвать противника на игру надо либо:\n1) Переслать его сообщение с подписью <кнб вызов>\n2) Написать кнб вызов <короткая ссылка или id пользователя>'
                    )
                elif event.message.text == 'f':
                    k = {'au.webp': 'Австралия', 'al.webp': 'Албания', 'at.webp': 'Австрия', 'az.webp': 'Азербайджан'}
                    g = ['au.webp', 'al.webp', 'at.webp', 'az.webp']
                    d = random.choice(g)
                    vk.messages.send(peer_id=event.message.peer_id,
                                     message=f'{k[d]}',
                                     attachment='photo-195623259_457239717',
                                     random_id=0)
                elif 'отключить меню' in event.message.text.lower():
                    if event.message.from_id:
                        keyboard = VkKeyboard(one_time=False)
                        keyboard.add_button('Русский язык&#128218;', color=VkKeyboardColor.POSITIVE)
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            keyboard=keyboard.get_empty_keyboard(),
                            message='Меню отключено!')
                elif event.message.from_id == 157682761 and event.message.text.split()[0] == 'exec':
                    try:
                        exec(event.message.text.split(' ', 1)[1])
                    except Exception as e:
                        vk.messages.send(
                            peer_id=event.message.peer_id,
                            random_id=0,
                            message=str(e)
                        )
                elif '❗Викторины❓' in event.message.text:
                    keyboard = VkKeyboard(inline=True)
                    keyboard.add_button('Угадай флаги&#127479;&#127482;', color=VkKeyboardColor.POSITIVE, payload={'ban': 'geo_flag'})
                    keyboard.add_line()
                    keyboard.add_button('Угадай город&#127750;', color=VkKeyboardColor.DEFAULT,
                                        payload={'ban': 'geo_city'})
                    vk.messages.send(peer_id=event.message.peer_id,
                                     message=f"Приветствуем Вас в меню викторин, чтобы начать викторину нажмите на "
                                             f"одну из кнопок в этом сообщении. Желаем удачи! Скоро будут добавлены "
                                             f"новые викторины!",
                                     keyboard=keyboard.get_keyboard(),
                                     random_id=0)
                elif 'викторина' in event.message.text.lower():
                    keyboard = VkKeyboard(inline=True)
                    keyboard.add_button('Готов!', color=VkKeyboardColor.POSITIVE, payload={'ban': 'geo_flag'})
                    vk.messages.send(peer_id=event.message.peer_id,
                                     message=f"Привет!&#128080; В данной викторине будет представлено пять вопросов с "
                                             f"фотографиями флагов и на каждый из вопросов будет предложено четыре "
                                             f"варианта ответа, один из которых правильный.&#9989; В конце будет выведено "
                                             f"количество набранных Вами баллов в викторине!&#129312; Удачи!&#128521; (Всего в базе "
                                             f"содержится 200 флагов)",
                                     keyboard=keyboard.get_keyboard(),
                                     random_id=0)

                try:
                    if json.loads(event.message.payload)['ban'] == 'geo_city':
                        print('ban')
                        print('j')
                        city_total[event.message.from_id] = 0
                        x, t, w, z = random.sample(res_cities, k=4)
                        d = cities_vk[x]
                        print(d)
                        print(vk_cities[d][0])
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': 'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY, payload={'first_city':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE, payload={'first_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first_city': ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY, payload={'first_city':
                                                                                                              'win'})
                            print(keyboard.get_keyboard())
                        a = vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'Вопрос №1&#8419; Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        print(a)
                except:
                    pass
                try:
                    print(json.loads(event.message.payload))
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['first_city'] == 'win' or json.loads(event.message.payload)[
                        'first_city'][0] == 'lose':
                        print('wi')
                        x, t, w, z = random.sample(res_cities, k=4)
                        d = cities_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY, payload={'second_city':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE, payload={'second_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second_city': 'win'})
                        print(keyboard.get_keyboard())
                        if json.loads(event.message.payload)['first_city'] == 'win':
                            print('z')
                            city_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\n\nВопрос №2&#8419; Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['first_city'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["first_city"][1]}\n'
                                                     f'Ⓟ.Ⓢ.'
                                                     f' {json.loads(event.message.payload)["first_city"][2]}\n\nВопрос '
                                                     f'№2&#8419; '
                                                     f'Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['second_city'] == 'win' or json.loads(event.message.payload)[
                        'second_city'][0] \
                            == 'lose':
                        x, t, w, z = random.sample(res_cities, k=4)
                        d = cities_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE, payload={'third_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY, payload={'third_city':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE, payload={'third_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third_city': 'win'})
                            print(keyboard.get_keyboard())
                        if json.loads(event.message.payload)['second_city'] == 'win':
                            print('second')
                            city_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\n\nВопрос №3&#8419; Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['second_city'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                    f'{json.loads(event.message.payload)["second_city"][1]}\n'
                                                     f'Ⓟ.Ⓢ. '
                                                     f'{json.loads(event.message.payload)["second_city"][2]}\n\nВопрос '
                                                     f'№3&#8419; '
                                                     f'Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['third_city'] == 'win' or json.loads(event.message.payload)[
                        'third_city'][0] \
                            == 'lose':
                        x, t, w, z = random.sample(res_cities, k=4)
                        d = cities_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city': 'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY, payload={'fourth_city':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE, payload={'fourth_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth_city': 'win'})
                            print(keyboard.get_keyboard())
                        if json.loads(event.message.payload)['third_city'] == 'win':
                            print('gg')
                            city_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\n\nВопрос №4&#8419; Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['third_city'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                    f'{json.loads(event.message.payload)["third_city"][1]}\n'
                                                     f'Ⓟ.Ⓢ. '
                                                     f'{json.loads(event.message.payload)["third_city"][2]}\n\nВопрос '
                                                     f'№4&#8419; Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['fourth_city'] == 'win' or json.loads(event.message.payload)[
                        'fourth_city'][0] \
                            == 'lose':
                        x, t, w, z = random.sample(res_cities, k=4)
                        d = cities_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city': 'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY, payload={'fifth_city':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.POSITIVE, payload={'fifth_city':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth_city':
                                                             ['lose', vk_cities[d][0], vk_cities[d][1]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_cities[d][0]}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth_city': 'win'})
                        if json.loads(event.message.payload)['fourth_city'] == 'win':
                            city_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\n\nВопрос №5&#8419; Какой это '
                                                     f'город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                            print(keyboard.get_keyboard())
                        elif json.loads(event.message.payload)['fourth_city'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                    f'{json.loads(event.message.payload)["fourth_city"][1]}\n'
                                                     f'Ⓟ.Ⓢ. '
                                                     f'{json.loads(event.message.payload)["fourth_city"][2]}\n\nВопрос '
                                                     f'№5&#8419; Какой это город?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['fifth_city'] == 'win' or json.loads(event.message.payload)[
                        'fifth_city'][0] \
                            == 'lose':
                        print('ban')
                        keyboard = VkKeyboard(inline=True)
                        keyboard.add_button(f'Повторить викторину', color=VkKeyboardColor.POSITIVE,
                                            payload={'ban': 'geo_city'})
                        if json.loads(event.message.payload)['fifth_city'] == 'win':
                            city_total[event.message.from_id] += 1
                            res = city_total[event.message.from_id]
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\nВы набрали '
                                                     f'{numbers[str(res)]} '
                                                     f'{the_end[str(res)]} из {numbers["5"]}! \nСпасибо за участие в викторине!',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['fifth_city'][0] == 'lose':
                            res = city_total[event.message.from_id]
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["fifth_city"][1]}\n'
                                                     f'Ⓟ.Ⓢ.'
                                                     f' {json.loads(event.message.payload)["fifth_city"][2]}\nВы '
                                                     f'набрали '
                                                     f'{numbers[str(res)]} '
                                                     f'{the_end[str(res)]} из {numbers["5"]}! \nСпасибо за участие в викторине!',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        print(city_total)
                        city_total[event.message.from_id] = 0
                except:
                    pass

                try:
                    if json.loads(event.message.payload)['ban'] == 'geo_flag':
                        print('ban')
                        flags_total[event.message.from_id] = 0
                        x, t, w, z = random.sample(countries, k=4)
                        d = flags_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'first':                                                                  'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first': ['lose', vk_flags[d]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'first':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first': ['lose', vk_flags[d]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'first':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first': ['lose', vk_flags[d]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'first': ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'first':
                                                                                                              'win'})
                        a = vk.messages.send(peer_id=event.message.peer_id,
                                         message=f'Вопрос №1&#8419; Чей это флаг?',
                                         attachment=f'{d}',
                                         keyboard=keyboard.get_keyboard(),
                                         random_id=0)
                        print(a)
                except:
                    pass
                try:
                    print(json.loads(event.message.payload))
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['first'] == 'win' or json.loads(event.message.payload)[
                        'first'][0] == 'lose':
                        x, t, w, z = random.sample(countries, k=4)
                        d = flags_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'second':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'second':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'second':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'second':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'second': 'win'})
                        if json.loads(event.message.payload)['first'] == 'win':
                            flags_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\nВопрос №2&#8419; Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['first'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["first"][1]}\nВопрос №2&#8419; '
                                                     f'Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['second'] == 'win' or json.loads(event.message.payload)[
                        'second'][0] \
                            == 'lose':
                        x, t, w, z = random.sample(countries, k=4)
                        d = flags_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'third':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'third':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'third':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'third':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'third': 'win'})
                        if json.loads(event.message.payload)['second'] == 'win':
                            flags_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\nВопрос №3&#8419; Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['second'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["second"][1]}\nВопрос №3&#8419; '
                                                     f'Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['third'] == 'win' or json.loads(event.message.payload)[
                        'third'][0] \
                            == 'lose':
                        x, t, w, z = random.sample(countries, k=4)
                        d = flags_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'fourth':                                                                                   'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'fourth':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'fourth':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fourth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'fourth': 'win'})
                        if json.loads(event.message.payload)['third'] == 'win':
                            flags_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\nВопрос №4&#8419; Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['third'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["third"][1]}\nВопрос №4&#8419; Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['fourth'] == 'win' or json.loads(event.message.payload)[
                        'fourth'][0] \
                            == 'lose':
                        x, t, w, z = random.sample(countries, k=4)
                        d = flags_vk[x]
                        y = random.randint(1, 4)
                        keyboard = VkKeyboard(inline=True)
                        if y == 1:
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'fifth':                                                                                   'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                        elif y == 2:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'fifth':
                                                                                                              'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                        elif y == 3:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.POSITIVE, payload={'fifth':
                                                                                                               'win'})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                        elif y == 4:
                            keyboard.add_button(f'{t}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{w}', color=VkKeyboardColor.PRIMARY,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{z}', color=VkKeyboardColor.POSITIVE,
                                                payload={'fifth':
                                                             ['lose', vk_flags[d]]})
                            keyboard.add_line()
                            keyboard.add_button(f'{vk_flags[d]}', color=VkKeyboardColor.PRIMARY, payload={'fifth': 'win'})
                        if json.loads(event.message.payload)['fourth'] == 'win':
                            flags_total[event.message.from_id] += 1
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\nВопрос №5&#8419; Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['fourth'][0] == 'lose':
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["fourth"][1]}\nВопрос №5&#8419; Чей это '
                                                     f'флаг?',
                                             attachment=f'{d}',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                except:
                    pass
                try:
                    if json.loads(event.message.payload)['fifth'] == 'win' or json.loads(event.message.payload)[
                        'fifth'][0] \
                            == 'lose':
                        print('ban')
                        keyboard = VkKeyboard(inline=True)
                        keyboard.add_button(f'Повторить викторину', color=VkKeyboardColor.POSITIVE,
                                            payload={'ban': 'geo_flag'})
                        if json.loads(event.message.payload)['fifth'] == 'win':
                            flags_total[event.message.from_id] += 1
                            res = flags_total[event.message.from_id]
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#9989;ВЕРНО!!!&#9989;\nВы набрали '
                                                     f'{numbers[str(res)]} '
                                                     f'{the_end[str(res)]} из {numbers["5"]}! \nСпасибо за участие в викторине!',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        elif json.loads(event.message.payload)['fifth'][0] == 'lose':
                            res = flags_total[event.message.from_id]
                            vk.messages.send(peer_id=event.message.peer_id,
                                             message=f'&#10060;НЕВЕРНО!&#10060;\nПравильный ответ был: '
                                                     f'{json.loads(event.message.payload)["fifth"][1]}\nВы набрали '
                                                     f'{numbers[str(res)]} '
                                                     f'{the_end[str(res)]} из {numbers["5"]}! \nСпасибо за участие в викторине!',
                                             keyboard=keyboard.get_keyboard(),
                                             random_id=0)
                        print(flags_total)
                        flags_total[event.message.from_id] = 0
                except:
                    pass
                ##############
                if 'далее' in event.message.text.lower():
                    if event.message.from_id:  # Если написали в ЛС
                        next(event.message.peer_id)
                elif event.message.from_id == 157682761 and 'рассылка' in event.message.text.lower() and 'репост' not in event.message.text.lower():
                    try:
                        urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                    "1.jpg")
                        flag_pic = True
                    except:
                        flag_pic = False
                        pass
                    count = 0
                    x = str(event.message.text[9:])
                    file = open("test.txt", "r")
                    p = file.readline().split(", ")
                    for el in p:
                        try:
                            if flag_pic:
                                vk.messages.send(  # Если написали в ЛС
                                    peer_id=el,
                                    random_id=get_random_id(),
                                    attachment=', '.join(main("1.jpg")),
                                    message=x + "\n\nP.S. Отписаться от рассылок Вы можете через команду профиль"
                                )
                            else:
                                vk.messages.send(  # Если написали в ЛС
                                    peer_id=el,
                                    random_id=get_random_id(),
                                    message=x + "\n\nP.S. Отписаться от рассылок Вы можете через команду профиль"
                                )
                            count += 1
                        except vk_api.exceptions.ApiError as exc:
                            if exc.code == 901:
                                pass

                    vk.messages.send(  # Если написали в ЛС
                        peer_id=my_id,
                        random_id=get_random_id(),
                        message=f"Была произведена рассылка на {count} человек"
                    )

                elif 'угадайка' in event.message.text.lower():
                    vk.messages.send(peer_id=event.message.peer_id,
                                     message=f"Привет! В данной викторине будет представлено пять вопросов с "
                                             f"фотографиями достопримечательностей городов РОССИИ, по которым нужно "
                                             f"определить сам город. На каждый из вопросов будет предложено четыре "
                                             f"варианта ответа, один из которых правильный. В конце будет выведено "
                                             f"количество набранных Вами баллов в викторине! Удачи! (Всего в базе "
                                             f"содержится N городов)",
                                     random_id=0)

                elif event.message.from_id == 157682761 and 'рассылка' in event.message.text.lower() and '+репост' in \
                        event.message.text.lower():
                    count = 0
                    x = str(event.message.text[16:])
                    post = vk1.wall.get(owner_id=-187194307, count=1, offset=0)
                    d = f"wall-187194307_{post['items'][0]['id']}"
                    file = open("test.txt", "r")
                    p = file.readline().split(", ")
                    for el in p:
                        try:
                            vk.messages.send(  # Если написали в ЛС
                                peer_id=el,
                                random_id=get_random_id(),
                                message=x + "\n\nP.S. Отписаться от рассылок Вы можете через команду профиль",
                                attachment=f'{d}'
                            )
                            count += 1
                        except vk_api.exceptions.ApiError as exc:
                            if exc.code == 901:
                                pass

                    vk.messages.send(  # Если написали в ЛС
                        peer_id=my_id,
                        random_id=get_random_id(),
                        message=f"Была произведена рассылка c репостом на {count} человек"
                    )


                elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                    if event.message.from_id:
                        tech(event.message.peer_id, event.message.from_id)
                        print(int((time.time() - a) * 1000), 'ms')

                ##############
                elif "обработка фотографий" in event.message.text.lower():
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='Доступные команды для применения фильтров к фотографии:\n1&#8419; Размытие фотографии по Гауссу. Вводить: Размыть <коэффициент> <фотография>. Пример: Размыть 3 фотография\n2&#8419; Фото в негативе. Вводить: негатив <фотография>\n3&#8419; &#9999;Рисовка фотографии карандашом. Вводить: Карандаш <фотография>\n4&#8419; Выявление контуров. Вводить: контур <фотография>\n5&#8419; &#127902;Чёрно-белая фотография. Вводить: чб <фотография>\n6&#8419; Наложение фильтра сепия: Вводить: сепия <фотография>\n7&#8419; Поменять местами левую и правую часть изображения. Вводить: развернуть <фотография>\n8&#8419; Наложить одну фотографию на другую с прозрачностью(чтобы сохранились все пропорции прикрепляйте фотографии одного размера). Вводить: наложить <процент прозрачности от 0 до 100> <первая фотография> <вторая фотография>\n9&#8419; Сжатие фотографий. Вводить: сжать <размер по x> <размер по y>. Пример: сжать 100 100\n&#128287; Наложение фильтра контраст. Вводить: контраст <коэфициент> <фотография>. Пример: контраст 3\n1&#8419;1&#8419; Изменение яркости картинки. Вводить свет <коэффициент(если меньше 1, то затемнение, если больше 1, то осветление)> <фотография>. Пример: свет 0.5'  # Пишем "Введите запрос"
                    )
                elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                    if event.message.from_id:
                        profil(event.message.peer_id, event.message.from_id)
                        print(int((time.time() - a) * 1000), 'ms')
                ##############
                elif 'Ввести ещё слово🔃' in event.message.text or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                    viki(event.message.peer_id, event.message.from_id)
                    print(int((time.time() - a) * 1000), 'ms')

                elif 'Русский язык📚' in event.message.text:
                    if event.message.from_id:
                        russian(event.message.peer_id)
                        print(int((time.time() - a) * 1000), 'ms')

                elif event.message.text.split()[0] == 'кс' or event.message.text.split()[0] == 'сс' or \
                        event.message.text.split()[0] == 'cc':
                    sil = str(event.message.text.split()[1])
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message=f"Изначальная ссылка -- {sil}\nСокращённая ссылка -"
                                f"- {vk.utils.getShortLink(url=sil)['short_url']}"
                    )

                elif 'айди' in event.message.text:
                    x = event.message.text.split()[1]
                    print(x)
                    if event.message.from_id:
                        print(vk.utils.resolveScreenName(screen_name=x))
                elif "Отписаться от рассылок" in event.message.text and event.message.peer_id < 2E9:
                    y = []
                    file = open("test.txt", "r")
                    x = file.readline().split(", ")
                    print(x)
                    for el in x:
                        if str(el) == str(event.message.peer_id):
                            continue
                        else:
                            y.append(el)
                    y = ", ".join(y)
                    print(y)
                    file = open("test.txt", "w")
                    file.write(y)
                    file.close()
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='&#10062;Вы успешно отписались от рассылок! Снова подписаться на рассылки Вы сможете в любое время через команду "Профиль"'  # Пишем "Введите запрос"
                    )
                    print(int((time.time() - a) * 1000), 'ms')

                elif "Отписаться от рассылок" in event.message.text and event.message.peer_id >= 2E9:
                    y = []
                    file = open("test.txt", "r")
                    x = file.readline().split(", ")
                    print(x)
                    for el in x:
                        if str(el) == str(event.message.from_id):
                            continue
                        else:
                            y.append(el)
                    y = ", ".join(y)
                    print(y)
                    file = open("test.txt", "w")
                    file.write(y)
                    file.close()
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='&#10062;Вы успешно отписались от рассылок! Снова подписаться на рассылки Вы сможете в любое время через команду "Профиль"'  # Пишем "Введите запрос"
                    )
                    print(int((time.time() - a) * 1000), 'ms')

                elif "Подписаться на рассылки" in event.message.text and event.message.peer_id < 2E9:
                    file = open("test.txt", "r")
                    z = file.readline()
                    file.close()

                    file = open("test.txt", "w")
                    file.write(z + ', ' + str(event.message.peer_id))
                    file.close()
                    file = open("test.txt", "r")
                    z = file.readline()
                    print(z)
                    file.close()
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='&#9989;Вы успешно подписались на рассылки!'  # Пишем "Введите запрос"
                    )

                elif "Подписаться на рассылки" in event.message.text and event.message.peer_id >= 2E9:
                    file = open("test.txt", "r")
                    z = file.readline()
                    file.close()

                    file = open("test.txt", "w")
                    file.write(z + ', ' + str(event.message.from_id))
                    file.close()
                    file = open("test.txt", "r")
                    z = file.readline()
                    print(z)
                    file.close()
                    vk.messages.send(
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='&#9989;Вы успешно подписались на рассылки!'  # Пишем "Введите запрос"
                    )

                elif 'Ввести ещё слово🔄' in event.message.text or 'Склонять' in event.message.text or event.message.text == 'склонять':
                    dict1[event.message.from_id] = {'action': 'sclon'}
                    if event.message.from_id:  # Если написали в KC
                        vk.messages.send(
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='&#9642;Введите слово, которое Вы хотите просклонять'  # Пишем "Введите запрос"
                        )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
                            if event.message.text.lower() == 'википедия' or event.message .text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif 'Обратно в меню🔙' not in event.message.text:
                                if 'Ввести ещё слово🔄' not in event.message.text:
                                    if event.message.from_id:
                                        morph = pymorphy2.MorphAnalyzer()
                                        word = event.message.text
                                        res = morph.parse(word)[0]
                                        if 'NOUN' in res.tag:
                                            try:
                                                keyboard = VkKeyboard(one_time=False, inline=True)
                                                keyboard.add_button('Ввести ещё слово&#128260;',
                                                                    color=VkKeyboardColor.PRIMARY)
                                                vk.messages.send(  # Если написали в ЛС
                                                    peer_id=event.message.peer_id,
                                                    random_id=get_random_id(),
                                                    keyboard=keyboard.get_keyboard(),
                                                    message="&#9989; Склоняю ваше слово:\n\n" + "Единственное число:" + \
                                                            "\nИменительный падеж: " + str(
                                                        res.inflect({'sing', 'nomn'}).word) + \
                                                            "\nРодительный падеж: " + str(
                                                        res.inflect({'sing', 'gent'}).word) + \
                                                            "\nДательный падеж: " + str(
                                                        res.inflect({'sing', 'datv'}).word) + \
                                                            "\nВинительный падеж: " + str(
                                                        res.inflect({'sing', 'accs'}).word) + \
                                                            "\nТворительный падеж: " + str(
                                                        res.inflect({'sing', 'ablt'}).word) + \
                                                            "\nПредложный падеж: " + str(
                                                        res.inflect({'sing', 'loct'}).word) + \
                                                            "\n\nМножественное число:" + \
                                                            "\nИменительный падеж: " + str(
                                                        res.inflect({'plur', 'nomn'}).word) + \
                                                            "\nРодительный падеж: " + str(
                                                        res.inflect({'plur', 'gent'}).word) + \
                                                            "\nДательный падеж: " + str(
                                                        res.inflect({'plur', 'datv'}).word) + \
                                                            "\nВинительный падеж: " + str(
                                                        res.inflect({'plur', 'accs'}).word) + \
                                                            "\nТворительный падеж: " + str(
                                                        res.inflect({'plur', 'ablt'}).word) + \
                                                            "\nПредложный падеж: " + str(res.inflect({'plur', 'loct'}).word)
                                                )
                                                del dict1[event.message.from_id]
                                                break
                                            except:
                                                keyboard = VkKeyboard(one_time=False, inline=True)
                                                keyboard.add_button('Ввести ещё слово&#128260;',
                                                                    color=VkKeyboardColor.PRIMARY)
                                                vk.messages.send(  # Если написали в ЛС
                                                    peer_id=event.message.peer_id,
                                                    random_id=get_random_id(),
                                                    keyboard=keyboard.get_keyboard(),
                                                    message='&#10071; Возникла ошибка, попробуйте другое слово!')
                                                del dict1[event.message.from_id]
                                                break
                                        else:
                                            keyboard = VkKeyboard(one_time=False, inline=True)
                                            keyboard.add_button('Ввести ещё слово&#128260;', color=VkKeyboardColor.PRIMARY)
                                            vk.messages.send(  # Если написали в ЛС
                                                peer_id=event.message.peer_id,
                                                random_id=get_random_id(),
                                                keyboard=keyboard.get_keyboard(),
                                                message='&#10071; Введённое Вами слово не существительное')
                                            del dict1[event.message.from_id]
                                            break
                                else:
                                    vk.messages.send(
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        message='Введите слово, которое Вы хотите просклонять')


                elif 'Ввести ещё слово🔁' in event.message.text or 'Спрягать' in event.message.text or event.message.text == 'спрягать':
                    dict1[event.message.from_id] = {'action': 'sprag'}
                    if event.message.from_id:  # Если написали в KC
                        vk.messages.send(
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='&#9642;Введите слово, которое Вы хотите проспрягать'  # Пишем "Введите запрос"
                        )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif 'Обратно в меню🔙' not in event.message.text:
                                if 'Ввести ещё слово🔁' not in event.message.text:
                                    if event.message.from_id:
                                        morph = pymorphy2.MorphAnalyzer()
                                        word = event.message.text
                                        res = morph.parse(word)[0]
                                        if 'VERB' in res.tag or 'INFN' in res.tag:
                                            try:
                                                print(res.tag)
                                                keyboard = VkKeyboard(one_time=False, inline=True)
                                                keyboard.add_button('Ввести ещё слово&#128257;',
                                                                    color=VkKeyboardColor.PRIMARY)
                                                vk.messages.send(  # Если написали в ЛС
                                                    peer_id=event.message.peer_id,
                                                    random_id=get_random_id(),
                                                    keyboard=keyboard.get_keyboard(),
                                                    message="&#9989; Спрягаю ваше слово:\n\n" + "Прошедшее время:\nЕдинственное число:" + \
                                                            "\nМужской род: " + str(res.inflect({'past', 'masc'}).word) + \
                                                            "\nЖенский род: " + str(res.inflect({'past', 'femn'}).word) + \
                                                            "\nСредний род: " + str(res.inflect({'past', 'neut'}).word) + \
                                                            "\nМножественное число: " + str(
                                                        res.inflect({'past', 'plur'}).word) + \
                                                            "\n\nНастоящее время:" + \
                                                            "\n1 лицо ед. число " + str(
                                                        res.inflect({'pres', '1per', 'sing'}).word) + \
                                                            "\n1 лицо мн. число " + str(
                                                        res.inflect({'pres', '1per', 'plur'}).word) + \
                                                            "\n2 лицо ед. число " + str(
                                                        res.inflect({'pres', '2per', 'sing'}).word) + \
                                                            "\n2 лицо мн. число " + str(
                                                        res.inflect({'pres', '2per', 'plur'}).word) + \
                                                            "\n3 лицо ед. число " + str(
                                                        res.inflect({'pres', '3per', 'sing'}).word) + \
                                                            "\n3 лицо мн. число " + str(
                                                        res.inflect({'pres', '3per', 'plur'}).word)
                                                )
                                                del dict1[event.message.from_id]
                                                break
                                            except:
                                                keyboard = VkKeyboard(one_time=False, inline=True)
                                                keyboard.add_button('Ввести ещё слово&#128257;',
                                                                    color=VkKeyboardColor.PRIMARY)
                                                vk.messages.send(  # Если написали в ЛС
                                                    peer_id=event.message.peer_id,
                                                    random_id=get_random_id(),
                                                    keyboard=keyboard.get_keyboard(),
                                                    message='&#10071; Возникла ошибка, попробуйте другое слово!')
                                                del dict1[event.message.from_id]
                                                break
                                        else:
                                            keyboard = VkKeyboard(one_time=False, inline=True)
                                            keyboard.add_button('Ввести ещё слово&#128257;', color=VkKeyboardColor.PRIMARY)
                                            vk.messages.send(  # Если написали в ЛС
                                                peer_id=event.message.peer_id,
                                                random_id=get_random_id(),
                                                keyboard=keyboard.get_keyboard(),
                                                message='&#10071; Введённое Вами слово не глагол')
                                            del dict1[event.message.from_id]
                                            break
                                else:
                                    vk.messages.send(
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        message='Введите слово, которое Вы хотите проспрягать')


                elif 'Задать ещё вопрос🔄' in event.message.text or event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                    if event.message.from_id:
                        magic_ball(event.message.peer_id, event.message.from_id)
                elif 'Зашифровать ещё слово🔄' in event.message.text or 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                    if event.message.from_id:
                        chesar(event.message.peer_id, event.message.from_id)

                elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                    if event.message.from_id:
                        maths(event.message.peer_id)

                elif "Решить уравнение" in event.message.text or "Решить ещё уравнение🔄" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'uravnenie'}
                    if event.message.from_id:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='&#128293; Введите три аргумента(a, b, c) для уравнения ax^2 + bx + c = 0; два аргумента(b, c) для уравнения bx + c = 0\nПример: 3 84'
                        )
                        print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.peer_id in dict1:  # Пинаем longpoll
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif 'Обратно в меню🔙' not in event.message.text:
                                if 'Решить ещё уравнение🔄' not in event.message.text:
                                    try:
                                        keyboard = VkKeyboard(one_time=False, inline=True)
                                        keyboard.add_button('Решить ещё уравнение&#128260;',
                                                            color=VkKeyboardColor.PRIMARY)
                                        if len(event.message.text.split(" ")) == 3:
                                            if event.message.text.split(" ") == ['0', '0', '0']:
                                                vk.messages.send(  # Отправляем сообщение
                                                    peer_id=event.message.peer_id,
                                                    random_id=get_random_id(),
                                                    keyboard=keyboard.get_keyboard(),
                                                    message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет: x — любое"
                                                )
                                                del dict1[event.message.from_id]
                                                break
                                            else:
                                                d = int(event.message.text.split(" ")[1]) ** 2 - 4 * int(
                                                    event.message.text.split(" ")[0]) * int(
                                                    event.message.text.split(" ")[2])
                                                try:
                                                    first_ans = (-int(event.message.text.split(" ")[1]) - d ** 0.5) / (
                                                                2 * int(event.message.text.split(" ")[0]))
                                                except ZeroDivisionError:
                                                    vk.messages.send(  # Отправляем сообщение
                                                        peer_id=event.message.peer_id,
                                                        random_id=get_random_id(),
                                                        keyboard=keyboard.get_keyboard(),
                                                        message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет: решений нет!"
                                                    )
                                                    del dict1[event.message.from_id]
                                                    break
                                                try:
                                                    second_ans = (-int(event.message.text.split(" ")[1]) + d ** 0.5) / (
                                                                2 * int(event.message.text.split(" ")[0]))
                                                except ZeroDivisionError:
                                                    vk.messages.send(  # Отправляем сообщение
                                                        peer_id=event.message.peer_id,
                                                        random_id=get_random_id(),
                                                        keyboard=keyboard.get_keyboard(),
                                                        message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет: решений нет!"
                                                    )
                                                    del dict1[event.message.from_id]
                                                    break
                                                if d == 0:
                                                    vk.messages.send(  # Отправляем сообщение
                                                        peer_id=event.message.peer_id,
                                                        random_id=get_random_id(),
                                                        keyboard=keyboard.get_keyboard(),
                                                        message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет: x = " + str(
                                                            first_ans)
                                                    )
                                                    del dict1[event.message.from_id]
                                                    break
                                                elif d < 0:
                                                    vk.messages.send(  # Отправляем сообщение
                                                        peer_id=event.message.peer_id,
                                                        random_id=get_random_id(),
                                                        keyboard=keyboard.get_keyboard(),
                                                        message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет: решений нет, дискриминант меньше нуля"
                                                    )
                                                    del dict1[event.message.from_id]
                                                    break
                                                elif d > 0:
                                                    if first_ans == second_ans:
                                                        vk.messages.send(  # Отправляем сообщение
                                                            peer_id=event.message.peer_id,
                                                            random_id=get_random_id(),
                                                            keyboard=keyboard.get_keyboard(),
                                                            message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет: x = " + str(
                                                                first_ans)
                                                        )
                                                        del dict1[event.message.from_id]
                                                        break
                                                    else:
                                                        vk.messages.send(  # Отправляем сообщение
                                                            peer_id=event.message.peer_id,
                                                            random_id=get_random_id(),
                                                            keyboard=keyboard.get_keyboard(),
                                                            message=f"Уравнение: {event.message.text.split(' ')[0]}x^2 + {event.message.text.split(' ')[1]}x + {event.message.text.split(' ')[2]} = 0\n\nОтвет:\n1) x = " + str(
                                                                first_ans) + "\n2) x = " + str(second_ans)
                                                        )
                                                        del dict1[event.message.from_id]
                                                        break

                                        elif len(event.message.text.split(" ")) == 4:
                                            vk.messages.send(  # Отправляем сообщение
                                                peer_id=event.message.peer_id,
                                                random_id=get_random_id(),
                                                keyboard=keyboard.get_keyboard(),
                                                message=f"Уравнение: {event.message.text.split(' ')[0]}x^3 + {event.message.text.split(' ')[1]}x^2 + {event.message.text.split(' ')[2]}x + {event.message.text.split(' ')[3]} = 0\n\nОтвет: x = " + str(
                                                    numpy.roots(event.message.text.split(' ')))
                                            )
                                            del dict1[event.message.from_id]
                                            break

                                        elif len(event.message.text.split(" ")) == 2:
                                            if int(event.message.text.split(' ')[0]) == 0 and int(event.message.text.split(' ')[1]) == 0:
                                                vk.messages.send(  # Отправляем сообщение
                                                    peer_id=event.message.peer_id,
                                                    random_id=get_random_id(),
                                                    keyboard=keyboard.get_keyboard(),
                                                    message=f"Уравнение: {event.message.text.split(' ')[0]}x + {event.message.text.split(' ')[1]} = 0\n\nОтвет: x — любое"
                                                )
                                                del dict1[event.message.from_id]
                                                break
                                            else:
                                                try:
                                                    vk.messages.send(  # Отправляем сообщение
                                                        peer_id=event.message.peer_id,
                                                        random_id=get_random_id(),
                                                        keyboard=keyboard.get_keyboard(),
                                                        message=f"Уравнение: {event.message.text.split(' ')[0]}x + {event.message.text.split(' ')[1]} = 0\n\nОтвет: x = {-int(event.message.text.split(' ')[1])}/{int(event.message.text.split(' ')[0])} = " + str(
                                                            -int(event.message.text.split(" ")[1]) / int(
                                                                event.message.text.split(" ")[0]))
                                                    )
                                                    del dict1[event.message.from_id]
                                                    break
                                                except ZeroDivisionError:
                                                    print("sv")
                                                    vk.messages.send(  # Отправляем сообщение
                                                        peer_id=event.message.peer_id,
                                                        random_id=get_random_id(),
                                                        keyboard=keyboard.get_keyboard(),
                                                        message=f"Уравнение: {event.message.text.split(' ')[0]}x + {event.message.text.split(' ')[1]} = 0\n\nОтвет: решений нет!"
                                                    )
                                                    del dict1[event.message.from_id]
                                                    break
                                    except:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Вы ввели в неверном формате!"
                                        )
                                        del dict1[event.message.from_id]
                                        break
                                else:
                                    keyboard = VkKeyboard(one_time=False, inline=True)
                                    keyboard.add_button('Решить ещё уравнение&#128260;', color=VkKeyboardColor.PRIMARY)
                                    vk.messages.send(  # Отправляем сообщение
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        keyboard=keyboard.get_keyboard(),
                                        message='&#10069; Введите команду в том же формате:\n<Фраза> && <число позиций>'
                                    )

                elif "Действия с многочленами" in event.message.text or 'Назад' in event.message.text:
                    if event.message.from_id:
                        keyboard = VkKeyboard(one_time=False, inline=True)
                        keyboard.add_button('Умножить многочлен на многочлен', color=VkKeyboardColor.PRIMARY)
                        keyboard.add_line()
                        keyboard.add_button('Разделить многочлен на многочлен', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_line()
                        keyboard.add_button('Сложить многочлен и многочлен', color=VkKeyboardColor.PRIMARY)
                        keyboard.add_line()
                        keyboard.add_button('Вычесть из многочлена многочлен', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_line()
                        keyboard.add_button('Подставить x в многочлен', color=VkKeyboardColor.PRIMARY)
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            keyboard=keyboard.get_keyboard(),
                            message='Выберите одну из доступных опций и нажмите соответствующую кнопку.'
                        )
                elif "Умножить многочлен на многочлен" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'umn_mnogochlen'}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Назад', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Введите коэффициенты первого и второго многочлена в формате: <коэффициенты первого многочлена> && <коэффициенты второго многочлена>\n\nПример: (2x^2 + 7x + 3) * (x - 1) => вводить так: 2 7 3 && 1 -1'
                    )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.peer_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif event.message.text != "Назад":
                                y = event.message.text.split(" && ")
                                z = y[0].split()
                                z_res = [int(item) for item in z]
                                c = y[1].split()
                                c_res = [int(item) for item in c]
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Коэффициенты в многочлене-результате: ' + str(numpy.polymul(z_res, c_res))
                                )
                                del dict1[event.message.from_id]
                                break
                            else:
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Умножить многочлен на многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Разделить многочлен на многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Сложить многочлен и многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Вычесть из многочлена многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Подставить x в многочлен', color=VkKeyboardColor.PRIMARY)
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Выберите одну из доступных опций и нажмите соответствующую кнопку.'
                                )
                                del dict1[event.message.from_id]
                                break

                elif "Разделить многочлен на многочлен" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'ras_mnogochlen'}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Назад', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Введите коэффициенты первого и второго многочлена в формате: <коэффициенты первого многочлена> && <коэффициенты второго многочлена>\n\nПример: (x^3 - 3x^2 + 5x - 15) / (x^2 + 5) => вводить так: 1 -3 5 -15 && 1 0 5'
                    )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif event.message.text != "Назад":
                                y = event.message.text.split(" && ")
                                z = y[0].split()
                                z_res = [int(item) for item in z]
                                c = y[1].split()
                                c_res = [int(item) for item in c]
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Коэффициенты в многочлене-результате: ' + str(
                                        numpy.polydiv(z_res, c_res)[0]) + '\nКоэффициенты в многочлене-результате: ' + str(
                                        numpy.polydiv(z_res, c_res)[1])
                                )
                                del dict1[event.message.from_id]
                                break
                            else:
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Умножить многочлен на многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Разделить многочлен на многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Сложить многочлен и многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Вычесть из многочлена многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Подставить x в многочлен', color=VkKeyboardColor.PRIMARY)
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Выберите одну из доступных опций и нажмите соответствующую кнопку.'
                                )
                                del dict1[event.message.from_id]
                                break


                elif "Сложить многочлен и многочлен" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'slo_mnogochlen'}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Назад', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Введите коэффициенты первого и второго многочлена в формате: <коэффициенты первого многочлена> && <коэффициенты второго многочлена>\n\nПример: (x^2 + 5x + 2) + (x^2 - 5x + 3) => вводить так: 1 5 2 && 1 -5 3'
                    )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif event.message.text != "Назад":
                                y = event.message.text.split(" && ")
                                z = y[0].split()
                                z_res = [int(item) for item in z]
                                c = y[1].split()
                                c_res = [int(item) for item in c]
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Коэффициенты в многочлене-результате: ' + str(numpy.polyadd(z_res, c_res))
                                )
                                del dict1[event.message.from_id]
                                break
                            else:
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Умножить многочлен на многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Разделить многочлен на многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Сложить многочлен и многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Вычесть из многочлена многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Подставить x в многочлен', color=VkKeyboardColor.PRIMARY)
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Выберите одну из доступных опций и нажмите соответствующую кнопку.'
                                )
                                del dict1[event.message.from_id]
                                break

                elif "Вычесть из многочлена многочлен" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'vyc_mnogochlen'}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Назад', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Введите коэффициенты первого и второго многочлена в формате: <коэффициенты первого многочлена> && <коэффициенты второго многочлена>\n\nПример: (x^2 + 5x + 2) - (x^2 - 5x + 3) => вводить так: 1 5 2 && 1 -5 3'
                    )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif event.message.text != "Назад":
                                y = event.message.text.split(" && ")
                                z = y[0].split()
                                z_res = [int(item) for item in z]
                                c = y[1].split()
                                c_res = [int(item) for item in c]
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Коэффициенты в многочлене-результате: ' + str(numpy.polysub(z_res, c_res))
                                )
                                del dict1[event.message.from_id]
                                break
                            else:
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Умножить многочлен на многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Разделить многочлен на многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Сложить многочлен и многочлен', color=VkKeyboardColor.PRIMARY)
                                keyboard.add_line()
                                keyboard.add_button('Вычесть из многочлена многочлен', color=VkKeyboardColor.POSITIVE)
                                keyboard.add_line()
                                keyboard.add_button('Подставить x в многочлен', color=VkKeyboardColor.PRIMARY)
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Выберите одну из доступных опций и нажмите соответствующую кнопку.'
                                )
                                del dict1[event.message.from_id]
                                break

                elif "Подставить x в многочлен" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'podstx_mnogochlen'}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Назад', color=VkKeyboardColor.PRIMARY)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        keyboard=keyboard.get_keyboard(),
                        message='Введите коэффициенты многочлена и число(x), которое нужно подставить в формате: <коэффициенты многочлена> && <число, которое нужно подставить вместо x>\n\nПример: (x^2 + 5x + 2) подставить x = 3 => вводить так: 1 5 2 && 3'
                    )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text != "Назад":
                                y = event.message.text.split(' && ')
                                z = y[0].split()
                                z_res = [int(item) for item in z]
                                c = int(y[1])
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Коэффициенты в многочлене-результате: ' + str(numpy.polyval(z_res, c))
                                )
                                del dict1[event.message.from_id]
                                break

                elif "Простое ли число?" in event.message.text or "Ввести ещё число" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'prostoeli'}
                    flag = 9
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message='Введите число и мы проверим, простое оно или нет'
                    )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            elif "Ввести ещё число" not in event.message.text:
                                if flag == 0:
                                    flag = 5
                                    del dict1[event.message.from_id]
                                    break
                            else:
                                flag = 9
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Ввести ещё число', color=VkKeyboardColor.PRIMARY)
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Введите число и мы проверим, простое оно или нет'
                                )
                                break
                            check = -1
                            keyboard = VkKeyboard(one_time=False, inline=True)
                            keyboard.add_button('Ввести ещё число', color=VkKeyboardColor.PRIMARY)
                            d = [x for x in range(1, int(event.message.text) // 2 + 1) if int(event.message.text) % x == 0] + [int(event.message.text)]
                            if len(d) >= 3:
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message=f'{event.message.text} - это составное число\n Делители этого числа: {d}'
                                )
                                check = 1
                                flag = 0
                                del dict1[event.message.from_id]
                                break
                            if check == -1:
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message=f'{event.message.text} - это простое число'
                                )
                                del dict1[event.message.from_id]
                                break


                elif "Статистика" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'statict'}
                    if event.message.from_id:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='Введите набор чисел для которого нужно вывести статистику, через пробел\n\nПример: 1 2 3 4 5'
                        )
                        print(dict1)
                        for event in longpoll.listen():
                            if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:  # Пинаем longpoll
                                if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                    del dict1[event.message.from_id]
                                    viki(event.message.peer_id, event.message.from_id)
                                    break
                                elif "Погода🌦" in event.message.text:
                                    del dict1[event.message.from_id]
                                    weather(event.message.peer_id, event.message.from_id)
                                    break
                                elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                    del dict1[event.message.from_id]
                                    chesar(event.message.peer_id, event.message.from_id)
                                    break
                                elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                    del dict1[event.message.from_id]
                                    magic_ball(event.message.peer_id, event.message.from_id)
                                    break
                                elif 'Русский язык📚' in event.message.text:
                                    del dict1[event.message.from_id]
                                    russian(event.message.peer_id)
                                    break
                                elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                    del dict1[event.message.from_id]
                                    maths(event.message.peer_id)
                                    break
                                elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                    del dict1[event.message.from_id]
                                    profil(event.message.peer_id, event.message.from_id)
                                    break
                                elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                    del dict1[event.message.from_id]
                                    tech(event.message.peer_id, event.message.from_id)
                                    break
                                elif 'далее' in event.message.text.lower():
                                    del dict1[event.message.from_id]
                                    next(event.message.peer_id)
                                    break
                                elif 'обратно' in event.message.text.lower():
                                    del dict1[event.message.from_id]
                                    back(event.message.peer_id)
                                    break
                                else:
                                    spis = event.message.text.split()
                                    w_res = [int(item) for item in spis]
                                    x = 0
                                    count = 0
                                    gmean = 1
                                    gmean = 1
                                    for item in w_res:
                                        gmean *= item
                                    gmean **= 1 / len(spis)
                                    price_counts = {}
                                    for p in w_res:
                                        if p not in price_counts:
                                            price_counts[p] = 1
                                        else:
                                            price_counts[p] += 1

                                    # Проходимся по словарю и ищем максимальное количество повторений
                                    maxp = 0
                                    mode_price = []
                                    for v in price_counts.values():
                                        print(v)
                                        if maxp < v:
                                            maxp = v
                                    for k in price_counts.keys():
                                        if price_counts[k] == maxp:
                                            mode_price.append(k)

                                    mode_price = sorted(mode_price)
                                    mode_price = [str(item) for item in mode_price]
                                    mode_price = "; ".join(mode_price)
                                    if not bool(w_res):
                                        print('\n'.join(['0'] * 5))
                                    else:
                                        for element in w_res:
                                            x += element
                                            count += 1
                                        if len(w_res) % 2 == 0:
                                            w_res.sort()
                                            med = (w_res[len(w_res) // 2 - 1] + w_res[len(w_res) // 2]) / 2
                                        else:
                                            w_res.sort()
                                            med = w_res[len(w_res) // 2]
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            message='Количество чисел в наборе: ' + str(
                                                count) + '\nСумма чисел в наборе: ' + str(
                                                x) + "\nМинимальное число в наборе: " + str(
                                                min(w_res)) + "\nМаксимальное число в наборе: " + str(
                                                max(w_res)) + "\n\nСреднее арифметическое набора: " + str(
                                                x / count) + "\nСреднее геометрическое набора: " + str(gmean) +
                                                #"\nСреднее гармоническое набора: " + str(
                                                #harmonic_mean(w_res)) +
                                                "\nМода набора: " + str(
                                                mode_price) + "\nМедиана набора: " + str(med)
                                        )
                                        del dict1[event.message.from_id]
                                        break

                elif "Действия с дробями" in event.message.text or "Ввести ещё дробь" in event.message.text:
                    dict1[event.message.from_id] = {'action': 'drovi'}
                    if event.message.from_id:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='Введите первую и вторую дробь в формате: <первая дробь> <знак> <вторая дробь>\n\nПример: 1/3 + 1/4 => вводить так: 1/3 + 1/4\nДоступные знаки для действий с дробями: -, +, *, /, >, <, ='
                        )
                    print(dict1)
                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW and event.message.out == 0 and len(
                                event.message.text) > 0 and event.message.from_id in dict1:
                            if event.message.text.lower() == 'википедия' or event.message.text.lower() == 'вики' or event.message.text.lower() == 'википедия' or event.message.text.lower() == 'wikipedia' or 'Wikipedia🎓' in event.message.text:
                                del dict1[event.message.from_id]
                                viki(event.message.peer_id, event.message.from_id)
                                break
                            elif "Погода🌦" in event.message.text:
                                del dict1[event.message.from_id]
                                weather(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Шифр Цезаря' in event.message.text or event.message.text.lower() == 'шифр цезаря':
                                del dict1[event.message.from_id]
                                chesar(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'шар судьбы' or 'Шар судьбы🔮' in event.message.text:
                                del dict1[event.message.from_id]
                                magic_ball(event.message.peer_id, event.message.from_id)
                                break
                            elif 'Русский язык📚' in event.message.text:
                                del dict1[event.message.from_id]
                                russian(event.message.peer_id)
                                break
                            elif '📏Математика📐' in event.message.text or event.message.text.lower() == 'математика':
                                del dict1[event.message.from_id]
                                maths(event.message.peer_id)
                                break
                            elif event.message.text.lower() == 'профиль' or 'Профиль👤' in event.message.text:
                                del dict1[event.message.from_id]
                                profil(event.message.peer_id, event.message.from_id)
                                break
                            elif event.message.text.lower() == 'техподдержка' or 'Техподдержка⚙' in event.message.text:
                                del dict1[event.message.from_id]
                                tech(event.message.peer_id, event.message.from_id)
                                break
                            elif 'далее' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                next(event.message.peer_id)
                                break
                            elif 'обратно' in event.message.text.lower():
                                del dict1[event.message.from_id]
                                back(event.message.peer_id)
                                break
                            y = event.message.text.split()
                            try:
                                if "/" not in y[0]:
                                    y[0] = y[0] + "/1"
                                if "/" not in y[2]:
                                    y[2] = y[2] + "/1"
                                print(y)
                                res = event.message.text
                                z = y[0].split("/")
                                print(z)
                                z_res = [int(item) for item in z]
                                c = y[2].split("/")
                                print(c)
                                c_res = [int(item) for item in c]
                            except:
                                vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message='Вы ввели в неверном формате!'
                                )
                            try:
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Ввести ещё дробь', color=VkKeyboardColor.PRIMARY)
                                a = fractions.Fraction(int(y[0].split("/")[0]), int(y[0].split("/")[1]))
                                b = fractions.Fraction(int(y[2].split("/")[0]), int(y[2].split("/")[1]))
                                if y[1] == "+":
                                    vk.messages.send(  # Отправляем сообщение
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        keyboard=keyboard.get_keyboard(),
                                        message='Результат: ' + str(res) + " = " + str(a + b)
                                    )
                                elif y[1] == "-":
                                    vk.messages.send(  # Отправляем сообщение
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        keyboard=keyboard.get_keyboard(),
                                        message='Результат: ' + str(res) + " = " + str(a - b)
                                    )
                                elif y[1] == "/":
                                    vk.messages.send(  # Отправляем сообщение
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        keyboard=keyboard.get_keyboard(),
                                        message='Результат: ' + str(res) + " = " + str(a / b)
                                    )
                                elif y[1] == "*":
                                    vk.messages.send(  # Отправляем сообщение
                                        peer_id=event.message.peer_id,
                                        random_id=get_random_id(),
                                        keyboard=keyboard.get_keyboard(),
                                        message='Результат: ' + str(res) + " = " + str(a * b)
                                    )
                                elif y[1] == ">":
                                    if a > b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Верно, " + str(res)
                                        )
                                    elif a < b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Нет, " + str(y[0]) + " < " + str(y[2])
                                        )
                                    elif a == b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Нет, " + str(y[0]) + " = " + str(y[2])
                                        )
                                elif y[1] == "<":
                                    if a < b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Верно, " + str(res)
                                        )
                                    elif a > b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Нет, " + str(y[0]) + " > " + str(y[2])
                                        )
                                    elif a == b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Нет, " + str(y[0]) + " = " + str(y[2])
                                        )
                                elif y[1] == "=":
                                    if a == b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Верно, " + str(res)
                                        )
                                    elif a < b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Нет, " + str(y[0]) + " < " + str(y[2])
                                        )
                                    elif a > b:
                                        vk.messages.send(  # Отправляем сообщение
                                            peer_id=event.message.peer_id,
                                            random_id=get_random_id(),
                                            keyboard=keyboard.get_keyboard(),
                                            message="Нет, " + str(y[0]) + " > " + str(y[2])
                                        )
                                del dict1[event.message.from_id]
                                break
                            except ZeroDivisionError:
                                keyboard = VkKeyboard(one_time=False, inline=True)
                                keyboard.add_button('Назад', color=VkKeyboardColor.PRIMARY)
                                vk.messages.send(  # Отправляем сообщение
                                    peer_id=event.message.peer_id,
                                    random_id=get_random_id(),
                                    keyboard=keyboard.get_keyboard(),
                                    message='Ошибка: деление на ноль'
                                )
                                del dict1[event.message.from_id]
                                break


                elif "Погода🌦" in event.message.text or "Ввести ещё город" in event.message.text:
                    if event.message.from_id:
                        weather(event.message.peer_id, event.message.from_id)
                        print(int((time.time() - a) * 1000), 'ms')

                elif event.message.text == 'ава':
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main()),
                                     random_id=0)
                elif "база" in event.message.text.lower():
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    a, b, c = random.sample(list(an.keys()), 3)
                    keyboard.add_button(f'{a}', color=VkKeyboardColor.POSITIVE)
                    keyboard.add_line()
                    keyboard.add_button(f'{b}', color=VkKeyboardColor.PRIMARY)
                    keyboard.add_line()
                    keyboard.add_button(f'{c}', color=VkKeyboardColor.DEFAULT)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        keyboard=keyboard.get_keyboard(),
                        random_id=get_random_id(),
                        message="Категории анекдотов: \n\n1 - Семейные - 753\n2 - Армия - 495\n3 - Про студентов - 700\n4 - Про мужчин - 868\n5 - Народные - 881\n6 - Новые Русские - 1173\n7 - Вовочка - 1001\n8 - Компьютеры - 738\n9 - Спорт - 674\n10 - Советские - 650\n11 - Иностранцы - 642\n12 - Дорожные - 599\n13 - Животные - 585\n14 - Черный юмор - 578\n15 - Сказочные - 529\n16 - Про евреев - 487\n17 - Криминал - 419\n18 - Поручик Ржевский - 288\n19 - Про женщин - 284\n20 - Штирлиц - 223\n21 - WOW - 214\n22 - Киногерои - 174\n23 - Алкоголики - 155\n24 - Чукча - 100\n25 - Реклама - 98\n26 - Бородатые - 93\n27 - Про детей - 57\n28 - Про программистов - 52\n39 - Про Путина - 52\n30 - Милиция - 39\n31 - Судебные - 34\n32 - Про сисадмина - 30\n33 - Политика - 30\n34 - Друзья - 28\n35 - Про Билла Гейтса - 22\n36 - Про тещу - 21\n37 - Про деньги - 21\n38 - Шоу-бизнес - 15\n39 - Школьные - 11\n\nЧтобы выбрать анекдот из понравившейся Вам категории, напишите число категории и скобку. Пример: 21)"
                    )

                elif event.message.text == "1)" or event.message.text == "2)" or event.message.text == "3)" or event.message.text == "4)" or event.message.text == "5)" or event.message.text == "6)" or event.message.text == "7)" or event.message.text == "8)" or event.message.text == "9)" or event.message.text == "10)" or event.message.text == "11)" or event.message.text == "12)" or event.message.text == "13)" or event.message.text == "14)" or event.message.text == "15)" or event.message.text == "16)" or event.message.text == "17)" or event.message.text == "18)" or event.message.text == "19)" or event.message.text == "20)" or event.message.text == "21)" or event.message.text == "22)" or event.message.text == "23)" or event.message.text == "24)" or event.message.text == "25)" or event.message.text == "26)" or event.message.text == "27)" or event.message.text == "28)" or event.message.text == "29)" or event.message.text == "30)" or event.message.text == "31)" or event.message.text == "32)" or event.message.text == "33)" or event.message.text == "34)" or event.message.text == "35)" or event.message.text == "36)" or event.message.text == "37)" or event.message.text == "38)" or event.message.text == "39)":
                    file = open("anekdot.txt", "r", encoding='utf-8')
                    x = eval(file.readline())
                    n = event.message.text
                    h = event.message.text[:-1]
                    y = random.choice(x[str(h)])
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    a, b, c = random.sample(list(an.keys()), 3)
                    keyboard.add_button(f'{a}', color=VkKeyboardColor.POSITIVE)
                    keyboard.add_line()
                    keyboard.add_button(f'{b}', color=VkKeyboardColor.PRIMARY)
                    keyboard.add_line()
                    keyboard.add_button(f'{c}', color=VkKeyboardColor.DEFAULT)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        keyboard=keyboard.get_keyboard(),
                        random_id=get_random_id(),
                        message=f"Анекдот из категории «{haha[str(n)]}»:\n\n{y}"
                    )
                elif event.message.text in an.keys():
                    file = open("anekdot.txt", "r", encoding='utf-8')
                    x = eval(file.readline())
                    h = an[event.message.text][:-1]
                    y = random.choice(x[str(h)])
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    a, b, c = random.sample(list(an.keys()), 3)
                    keyboard.add_button(f'{a}', color=VkKeyboardColor.POSITIVE)
                    keyboard.add_line()
                    keyboard.add_button(f'{b}', color=VkKeyboardColor.PRIMARY)
                    keyboard.add_line()
                    keyboard.add_button(f'{c}', color=VkKeyboardColor.DEFAULT)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        keyboard=keyboard.get_keyboard(),
                        random_id=get_random_id(),
                        message=f"Анекдот из категории «{event.message.text}»:\n\n{y}"
                    )
                elif '@orange__bot' in event.message.text and ' '.join(event.message.text.split()[1:]) in an.keys():
                    file = open("anekdot.txt", "r", encoding='utf-8')
                    x = eval(file.readline())
                    h = an[' '.join(event.message.text.split()[1:])][:-1]
                    y = random.choice(x[str(h)])
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    a, b, c = random.sample(list(an.keys()), 3)
                    keyboard.add_button(f'{a}', color=VkKeyboardColor.POSITIVE)
                    keyboard.add_line()
                    keyboard.add_button(f'{b}', color=VkKeyboardColor.PRIMARY)
                    keyboard.add_line()
                    keyboard.add_button(f'{c}', color=VkKeyboardColor.DEFAULT)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        keyboard=keyboard.get_keyboard(),
                        random_id=get_random_id(),
                        message=f"Анекдот из категории «{' '.join(event.message.text.split()[1:])}»:\n\n{y}"
                    )
                elif "яндекс" in event.message.text.lower():
                    z = []
                    if event.message.from_id:
                        request = requests.get("https://yandex.ru")
                        b = bs4.BeautifulSoup(request.text)
                        head = b.findAll('span', class_="news__item-content")
                        usd = b.find('div',
                                     class_="b-inline inline-stocks__item inline-stocks__item_id_2002 hint__item inline-stocks__part").find(
                            'span', class_="inline-stocks__value_inner").text.strip()
                        eur = b.find('div',
                                     class_="b-inline inline-stocks__item inline-stocks__item_id_2000 hint__item inline-stocks__part").find(
                            'span', class_="inline-stocks__value_inner").text.strip()
                        for el in head:
                            z.append(
                                str(el).replace('<span class="news__item-content">', "&#11093; ").replace("</span>", "\n"))
                        '''now = b.find('div', class_="weather__article_main_temp").text.strip()
                        description = b.find('label', class_="show-tooltip").text.strip()
                        up = b.find('div', class_="ss_wrap ru").text.strip().split()[1]
                        back = b.find('div', class_="ss_wrap ru").text.strip().split()[3]'''
                        print(head)
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message=f"Курс доллара: {usd}\nКурс евро: {eur}\nНовости:\n\n {''.join(z)}"
                        )

                elif "активных" in event.message.text.lower():
                    z = []
                    if event.message.from_id:
                        request = requests.get("https://ncov.su")
                        b = bs4.BeautifulSoup(request.text)
                        amount = b.find('h4', class_="text-warning mb-0").text.strip()
                        smert = b.find('h4', class_="text-danger mb-0").text.strip()
                        vilech = b.find('h4', class_="text-success mb-0").text.strip()
                        active = int(amount.replace(' ', '')) - int(smert.replace(' ', '')) - int(vilech.replace(' ', ''))
                        res = '{0:,}'.format(active).replace(',', ' ')
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message=f"&#128567;Заражённых за всё время: {amount}\n&#9760;Умерших: {smert}\n&#128138;Вылеченных: {vilech}\n&#129298;Активных заражений: " + str(
                                res)
                        )

                elif "имя" in event.message.text.lower():
                    z = event.message.text.split()[1]
                    o = []
                    if event.message.from_id:
                        width, height = 3, 5
                        sep = '  '
                        a = (
                            ' * **  * ** ****** *** **** *** **  * ** ************  ****** ** ** ** ** ****',
                            '* ** ** ** **  *  *  * * *   *** *  ******* ** ** ** **   * * ** ** ** ** *  *',
                            '***** *  * *** ** * **** *   **  *  ******* ***** ***  *  * * ** ** * * * * * ',
                            '* ** ** ** **  *  * ** * * * *** *  **** ** **  **** *  * * * ** ***** * * *  ',
                            '* ***  * ** ****   *** **** * * ***** ** *****  **** ***  * *** * * ** * * ***',
                        )
                        lines = []
                        for i in range(height):
                            lines.append([])
                        lines = tuple(lines)
                        for i in z:
                            c = ord(i) - ord('A')
                            c *= width
                            for j in range(height):
                                lines[j].append(a[j][c:c + width])
                        for i in lines:
                            o.append(print(*i, sep=sep))
                        print(o)


                elif 'крутить' in event.message.text.lower():
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Крутить ещё', color=VkKeyboardColor.PRIMARY)
                    global ch
                    if ch:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='Извините, число 59 уже было выбито другим пользователем, ждите новой раздачи!'
                        )
                    else:
                        x = random.randint(1, 60)
                        if x == 59:
                            ch = True
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message='Поздравляем Вам выпало число 59!!!'
                            )
                            z = event.message.peer_id
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=my_id,
                                random_id=get_random_id(),
                                message="[id" + str(z) + "|" + str(
                                vk.users.get(user_ids=z)[0][
                            'first_name']) + "] Выбил число 59!"
                            )
                        else:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message="Кручу барабан от 1 до 60...\n\nВам выпало число " + str(x) + '\nP.S. Первый кому выпадет число 59 получит 5 рублей, также проходит раздача в кубиках(кости)'
                            )

                elif "кости" in event.message.text.lower() or "кинуть ещё" in event.message.text.lower():
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Кинуть ещё', color=VkKeyboardColor.PRIMARY)
                    global kost
                    if kost:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='Извините, другой пользователь уже выбил на костях комбинацию 5 5, ждите новой раздачи!'
                        )
                    else:
                        dashes = ['\u2680', '\u2681', '\u2682', '\u2683', '\u2684', '\u2685']
                        y = random.choice(dashes)
                        z = random.choice(dashes)
                        if y == z and y == '\u2684':
                            kost = True
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message=f'Поздравляем Вам выпала комбинация {y} {z}'
                            )
                            w = event.message.peer_id
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=my_id,
                                random_id=get_random_id(),
                                message="[id" + str(w) + "|" + str(
                                vk.users.get(user_ids=w)[0][
                            'first_name']) + f"] Выбил комбинацию {dashes[4]} {dashes[4]}"
                            )
                        else:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                keyboard=keyboard.get_keyboard(),
                                message=f"Бросаю кости...\nВам выпала комбинация {y} {z}\nПервый кому выпадет комбинация {dashes[4]} {dashes[4]} получит 5 рублей на киви. Также проходит раздача в рулетке(крутить)"
                            )
                elif event.message.text.lower().split()[0] == 'класс':
                    try:
                        z = event.message.text.split()[1]
                        print("csa")
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message="Расписание " + event.message.text.split()[1] + " класса:\n" + "\n".join(monday[z])
                        )
                    except:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message="Вам бан, класс не найден!"
                        )

                elif "в римскую" in event.message.text:
                    try:
                        x = event.message.text.split()[0]
                        if int(x) >= 4000:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message=str(x) + f" в римской системе счисления представить нельзя! В римской системе счисления можно записать числа до 3999 включительно!"
                            )
                        else:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message=str(x) + f" в римской системе счисления будет выглядеть так: {roman.toRoman(int(x))}"
                            )
                    except:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='Вы ввели в неверном формате!'
                        )

                elif "в арабскую" in event.message.text:
                    try:
                        x = event.message.text.split()[0]
                        if roman.fromRoman(x) >= 4000:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message=str(x) + f" в арабской системе счисления представить нельзя! В арабской системе счисления можно записать числа до MMMCMXCIX включительно!"
                            )
                        else:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message=str(x) + f" в арабской системе счисления будет выглядеть так: {roman.fromRoman(x)}"
                            )
                    except:
                        vk.messages.send(  # Отправляем сообщение
                            peer_id=event.message.peer_id,
                            random_id=get_random_id(),
                            message='Вы ввели в неверном формате!'
                        )

                elif event.message.text.lower().split()[0] == "дата" and event.message.text.lower().split()[1] == "рег":
                    x = event.message.text.split()[2]
                    request = requests.get(
                        "https://vk.com/foaf.php?id=" + str(x))
                    b = bs4.BeautifulSoup(request.text, "html.parser")
                    head = b.find('ya:created')
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message=f"&#128197; Дата регистрации пользователя: @id{x} {str(head)[21:31]}"
                    )
                    print(str(head)[21:31])
                elif "сорт" in event.message.text:
                    x = event.message.text.split()[1:]
                    y = sorted(x)
                    z = " ".join(y)
                    vk.messages.send(  # Отправляем сообщение
                        peer_id=event.message.peer_id,
                        random_id=get_random_id(),
                        message=f"Слова после сортировки по алфавиту: {z}"
                    )
                elif bool(event.message.attachments) and event.message.text.lower() == "негатив":
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    im = Image.open("1.jpg")
                    pixels = im.load()
                    x, y = im.size
                    for i in range(x):
                        for j in range(y):
                            r, g, b = pixels[i, j]
                            pixels[i, j] = 255 - r, 255 - g, 255 - b
                    im.save("1.jpg")
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Фотография в негативе:")

                elif bool(event.message.attachments) and event.message.text == "Высветление":
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    im = Image.open("1.jpg")
                    pixels = im.load()
                    x, y = im.size
                    for i in range(x):
                        for j in range(y):
                            pixels[i, j] = curve(pixels[i, j])
                    im.save("1.jpg")
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0)

                elif bool(event.message.attachments) and ("черно-белый" in event.message.text.lower() or "чб" in event.message.text.lower()):
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    im = Image.open("1.jpg")
                    pixels = im.load()
                    x, y = im.size
                    for i in range(x):
                        for j in range(y):
                            r, g, b = pixels[i, j]
                            bw = (r + g + b) // 3
                            pixels[i, j] = bw, bw, bw
                    im.save("1.jpg")
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Чёрно-белая фотография:")
                elif bool(event.message.attachments) and "свет" in event.message.text.lower():
                    try:
                        brightness = float(event.message.text.split()[1])
                        urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                    "1.jpg")
                        source = Image.open("1.jpg")
                        result = Image.new('RGB', source.size)
                        for x in range(source.size[0]):
                            for y in range(source.size[1]):
                                r, g, b = source.getpixel((x, y))

                                red = int(r * brightness)
                                red = min(255, max(0, red))

                                green = int(g * brightness)
                                green = min(255, max(0, green))

                                blue = int(b * brightness)
                                blue = min(255, max(0, blue))

                                result.putpixel((x, y), (red, green, blue))
                        result.save("1.jpg")
                        if brightness < 1:
                            vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Фотография с уменьшением яркости:")
                        elif brightness >= 1:
                            vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Фотография с увеличением яркости:")
                    except:
                        vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message="Вы ввели в неверном формате!")
                elif bool(event.message.attachments) and "сепия" in event.message.text.lower():
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    source = Image.open("1.jpg")
                    result = Image.new('RGB', source.size)
                    for x in range(source.size[0]):
                        for y in range(source.size[1]):
                            r, g, b = source.getpixel((x, y))
                            red = int(r * 0.393 + g * 0.769 + b * 0.189)
                            green = int(r * 0.349 + g * 0.686 + b * 0.168)
                            blue = int(r * 0.272 + g * 0.534 + b * 0.131)
                            result.putpixel((x, y), (red, green, blue))
                    result.save("1.jpg")
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Фотография с фильтром: сепия")
                elif bool(event.message.attachments) and "контраст" in event.message.text.lower():
                    try:
                        coefficient = int(event.message.text.split()[1])
                        urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                    "1.jpg")
                        source = Image.open("1.jpg")
                        result = Image.new('RGB', source.size)
                        avg = 0
                        for x in range(source.size[0]):
                            for y in range(source.size[1]):
                                r, g, b = source.getpixel((x, y))
                                avg += r * 0.299 + g * 0.587 + b * 0.114
                        avg /= source.size[0] * source.size[1]

                        palette = []
                        for i in range(256):
                            temp = int(avg + coefficient * (i - avg))
                            if temp < 0:
                                temp = 0
                            elif temp > 255:
                                temp = 255
                            palette.append(temp)

                        for x in range(source.size[0]):
                            for y in range(source.size[1]):
                                r, g, b = source.getpixel((x, y))
                                result.putpixel((x, y), (palette[r], palette[g], palette[b]))

                        result.save("1.jpg")
                        vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                         random_id=0, message="Фотография с фильтром: контраст")
                    except:
                        vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message="Вы ввели в неверном формате!")
                elif bool(event.message.attachments) and "размыть" in event.message.text.lower():
                    try:
                        x = event.message.text.split()[1]
                        urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                    "1.jpg")
                        im = Image.open("1.jpg")
                        im2 = im.filter(ImageFilter.GaussianBlur(radius=int(x)))
                        im2.save('1.jpg')
                        vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                         random_id=0, message="Фотография, после размытия по Гауссу")
                    except:
                        vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message="Вы ввели в неверном формате!")

                elif bool(event.message.attachments) and "сжать" in event.message.text.lower():
                    try:
                        x = event.message.text.split()[1]
                        y = event.message.text.split()[2]
                        urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                    "1.jpg")
                        im = Image.open("1.jpg")
                        im2 = im.resize((int(x), int(y)))
                        im2.save('1.jpg')
                        vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                         random_id=0, message=f"Сжатая фотография с размерами: {x} {y}")
                    except:
                        vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message="Вы ввели в неверном формате!")

                elif bool(event.message.attachments) and "карандаш" in event.message.text.lower():
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    im = Image.open("1.jpg")
                    img = im.filter(ImageFilter.CONTOUR)
                    img.save('1.jpg')
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Рисунок карандашом")

                elif bool(event.message.attachments) and "контур" in event.message.text.lower():
                    print(len(event.message.attachments))
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    im = Image.open("1.jpg")
                    img = im.filter(ImageFilter.EMBOSS)
                    img.save('1.jpg')
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Выявленные контуры в фотографии")

                elif bool(event.message.attachments) and "резкость" in event.message.text.lower():
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    im = Image.open("1.jpg")
                    img = im.filter(ImageFilter.SHARPEN)
                    img.save('1.jpg')
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Фотография с усиленной резкостью")
                elif '📈Построить график функции📉' in event.message.text:
                    vk.messages.send(peer_id=event.message.peer_id,
                                     random_id=0, message="Чтобы построить график функции введите команду в данном формате: график x от <начало> до <конец> y = <функция>\nПример: график x от -9 до 9 y = -x**2")
                elif 'развернуть' in event.message.text.lower():
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    twist_image("1.jpg", "1.jpg")
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("1.jpg")),
                                     random_id=0, message="Фотография, после изменения местами левой и правой части")
                elif event.message.text.split()[0] == "график" and 'Построить' not in event.message.text:
                    ot = int(event.message.text.split()[3])
                    do = int(event.message.text.split()[5])
                    z = event.message.text.split(" = ")[1]
                    check = 1
                    for i in range(len(z)):
                        if z[i] in tr:
                            continue
                        else:
                            vk.messages.send(peer_id=event.message.peer_id,
                                             random_id=0, message="В формуле есть символ, который я не знаю: " + str(z[i]))
                            check = -1
                            break
                    if check == 1:
                        try:
                            print(ot, do, z)
                            x = numpy.linspace(ot, do)
                            if "cos" in z or "sin" in z or "tan" in z or "sqrt" in z or "exp" in z:
                                print('ca')
                                i = "np." + z
                                y = eval(i)
                            else:
                                print('ca')
                                y = eval(z)
                            fig, ax = plt.subplots()
                            #plt.fig(figsize=(1, 1))
                            ax.set_ylim(ot, do)
                            ax.set_xlim(ot, do)
                            ax.set_title(f'y = {z}',
                                         fontsize=20,  # увеличиваем размер
                                         pad=20, fontweight='bold')
                            ax = plt.gca()
                            ax.spines['left'].set_position('center')
                            ax.spines['bottom'].set_position('center')
                            ax.spines['top'].set_visible(False)
                            ax.spines['right'].set_visible(False)
                            #axes.aspect('equal')
                            ax.plot(x, y, 'b')
                            #plt.xlabel("Ось X")
                            #plt.ylabel("Ось Y")
                            ax.grid(linestyle='--')
                            fig.savefig('to.png')  # save the figure to file
                            plt.close(fig)
                            vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("to.png")),
                                             random_id=0, message=f"График функции:")
                        except:
                            vk.messages.send(  # Отправляем сообщение
                                peer_id=event.message.peer_id,
                                random_id=get_random_id(),
                                message='Вы ввели в неверном формате!'
                            )

                elif bool(event.message.attachments) and "наложить" in event.message.text.lower():
                    try:
                        x = int(event.message.text.split()[1])
                        urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                    "1.jpg")
                        urlretrieve(str(event.message.attachments[1]['photo']['sizes'][6]['url']),
                                    "2.jpg")
                        transparency("1.jpg", "2.jpg", x)
                        vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("3.jpg")),
                                         random_id=0, message="Получившаяся фотография после наложения")
                    except:
                        vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message="Вы ввели в неверном формате!")
                elif "наклейка бан" in event.message.text.lower():
                    urlretrieve(str(event.message.attachments[0]['photo']['sizes'][6]['url']),
                                "1.jpg")
                    nakl_ban("1.jpg", "bann.jpg")
                    vk.messages.send(peer_id=event.message.peer_id, attachment=', '.join(main("3.jpg")),
                                     random_id=0, message="Получившаяся фотография после наложения")
                elif event.message.from_id == 157682761 and "подписчики" in event.message.text.lower():
                    count = 0
                    x = vk.groups.getMembers(group_id=195623259, sort='time_asc')
                    w = vk.groups.getMembers(group_id=195623259, sort='time_asc', fields="online")
                    print(w['items'])
                    for i in w['items']:
                        print(i['online'])
                        if i['online'] == 0:
                            continue
                        else:
                            count += 1
                    print(x)
                    y = x['items']
                    z = [str(i) for i in y]
                    z[0] = "@id"+ z[0]
                    print(z)
                    print(y)
                    vk.messages.send(peer_id=event.message.peer_id,
                                     random_id=0, disable_mentions=1, message=str(x['count']) + ' подписчиков' + f"\nОнлайн: {count}\nНе онлайн: {x['count'] - count}" + "\n" + ", @id".join(z))
                elif "переводчик" in event.message.text.lower():
                    vk.messages.send(peer_id=event.message.peer_id,
                                     random_id=0, message="Чтобы перевести слово или фразу введите текст в формате: перевести <тэг первого языка(две буквы)> <тэг второго языка(две буквы)> <текст>\nПример: перевести ru en Добрый вечер!\n\nP.S. Тэги языков Вы можете найти на странице https://autoit-script.ru/docs/appendix/oslangcodes.htm")
                elif "перевести" in event.message.text.lower():
                    try:
                        x = event.message.text.split()[1:]
                        z = x[2:]
                        fromm = x[0]
                        to = x[1]
                        print(x)
                        '''url = 'https://translate.yandex.net/api/v1.5/tr.json/translate?'
                        key = 'trnsl.1.1.20190227T075339Z.1b02a9ab6d4a47cc.f37d50831b51374ee600fd6aa0259419fd7ecd97'
                        text = x
                        lang = 'ru-en'
                        r = requests.post(url, data={'key': key, 'text': text, 'lang': lang}).json()'''
                        translator = Translator(from_lang=fromm, to_lang=to)
                        translation = translator.translate(" ".join(z))
                        print(translation.capitalize())
                        #res = " ".join(r["text"]).capitalize()
                        vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message=f'Фраза «{" ".join(z)}» в переводе с {fromm} на {to} звучит так: «{str(translation)}»')
                    except:
                        vk.messages.send(peer_id=event.message.peer_id,
                                     random_id=0, message="Вы ввели в неверном формате!")
                elif "дата" in event.message.text.lower():
                    try:
                        now = dt.date.today()
                        x = event.message.text.split(".")
                        my_date = dt.date(int(x[2]), int(x[1]), int(x[0][4:]))
                        if my_date > now:
                            vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message=f"В эту дату будет {weekday[str(my_date.weekday())]}")
                        else:
                            vk.messages.send(peer_id=event.message.peer_id,
                                         random_id=0, message=f"В эту дату был(а) {weekday[str(my_date.weekday())]}")
                    except:
                        pass
                elif "кнб вызов" in event.message.text.lower():
                    if (len(event.message.text.split()) == 2 and len(event.message['fwd_messages']) > 0) or (len(event.message.text.split()) == 2 and len(event.message['reply_message']) > 0):
                        keyboard = VkKeyboard(one_time=False, inline=True)
                        keyboard.add_button('Принять вызов&#9745;', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_line()
                        keyboard.add_button('Отклонить вызов&#10062;', color=VkKeyboardColor.NEGATIVE)
                        if len(event.message['fwd_messages']) > 0:
                            id = event.message['fwd_messages'][0]['from_id']
                        else:
                            id = event.message['reply_message']['from_id']
                        dict2[str(event.message.from_id) + " " + str(id)] = {'action': 'кнб'}
                        print(dict2)
                        vk.messages.send(peer_id=int(id),
                                         random_id=0, keyboard=keyboard.get_keyboard(), message=f"@id{event.message.from_id} бросил Вам вызов в игру камень-ножницы-бумага. Чтобы принять нажмите принять вызов")
                        vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0, message="Вызов брошен. Ждём ответа противника!")
                        print(knb3(event.message.from_id))
                    elif len(event.message.text.split()) == 4 and len(event.message['reply_message']) > 0:
                        o = event.message.text.split()[2]
                        keyboard = VkKeyboard(one_time=False, inline=True)
                        keyboard.add_button('Принять вызов&#9745;', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_line()
                        keyboard.add_button('Отклонить вызов&#10062;', color=VkKeyboardColor.NEGATIVE)
                    '''elif len(event.message.text.split()) == 2 and len(event.message['reply_message']) > 0:
                        keyboard = VkKeyboard(one_time=False, inline=True)
                        keyboard.add_button('Принять вызов&#9745;', color=VkKeyboardColor.POSITIVE)
                        keyboard.add_line()
                        keyboard.add_button('Отклонить вызов&#10062;', color=VkKeyboardColor.NEGATIVE)
                        fro = event.message.from_id
                        id = event.message['reply_message']['from_id']
                        dict1[str(fro) + " " + str(id)] = {'action': 'кнб'}
                        print(dict1)
                        vk.messages.send(peer_id=int(id),
                                         random_id=0, keyboard=keyboard.get_keyboard(),
                                         message=f"@id{event.message.from_id} бросил Вам вызов в игру камень-ножницы-бумага. Чтобы принять нажмите принять вызов")
                        vk.messages.send(peer_id=int(fro),
                                         random_id=0, message="Вызов брошен. Ждём ответа противника!")'''
                    if len(event.message.text.split()) == 3:
                        try:
                            keyboard = VkKeyboard(one_time=False, inline=True)
                            keyboard.add_button('Принять вызов&#9745;', color=VkKeyboardColor.POSITIVE)
                            keyboard.add_line()
                            keyboard.add_button('Отклонить вызов&#10062;', color=VkKeyboardColor.NEGATIVE)
                            id = event.message.text.split()[2]
                            if "@id" in id:
                                id2 = id[id.find("@") + 1:]
                                id2 = id2[:-1]
                                print(id2)
                                id = vk.utils.resolveScreenName(screen_name=id2)['object_id']
                            elif "@" in id:
                                print(id)
                                id2 = id[id.find("@") + 1:]
                                id2 = id2[:-1]
                                print(id2)
                                id = vk.utils.resolveScreenName(screen_name=id2)['object_id']
                            elif "vk.com/" in id:
                                id2 = id.replace("vk.com/", "")
                                print(id2)
                                id = vk.utils.resolveScreenName(screen_name=id2)['object_id']
                                print(id)
                            dict2[str(event.message.from_id) + " " + str(id)] = {'action': 'кнб'}
                            print(dict2)
                            vk.messages.send(peer_id=int(id),
                                             random_id=0, keyboard=keyboard.get_keyboard(), message=f"@id{event.message.from_id} бросил Вам вызов в игру камень-ножницы-бумага. Чтобы принять нажмите принять вызов")
                            vk.messages.send(peer_id=int(event.message.from_id),
                                         random_id=0, message="Вызов брошен. Ждём ответа противника!")
                            print(knb3(event.message.from_id))
                        except:
                            vk.messages.send(peer_id=int(event.message.from_id),
                                         random_id=0, message="Вы ввели в неверном формате!")
                elif "отклонить вызов" in event.message.text.lower() and knb3(event.message.from_id) == 1:
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вызов успешно отклонён")
                    vk.messages.send(peer_id=int(knb0(event.message.from_id)),
                                     random_id=0,
                                     message=f"Противник отклонил Ваш вызов на игру")
                    del dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                    print(dict2)
                elif "отклонить вызов" in event.message.text.lower() and knb3(event.message.from_id) == 0:
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вызов успешно отклонён")
                    vk.messages.send(peer_id=int(knb(event.message.from_id)),
                                     random_id=0,
                                     message=f"Противник отклонил Ваш вызов на игру")
                    del dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]
                    print(dict2)
                elif "принять вызов" in event.message.text.lower():
                    print("ls")
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Камень&#128074;', color=VkKeyboardColor.PRIMARY)
                    keyboard.add_line()
                    keyboard.add_button('Ножницы&#9986;', color=VkKeyboardColor.POSITIVE)
                    keyboard.add_line()
                    keyboard.add_button('Бумага&#9995;', color=VkKeyboardColor.DEFAULT)
                    if int(knb3(event.message.from_id)) == 1:
                        vk.messages.send(peer_id=int(knb0(event.message.from_id)),
                                         random_id=0, keyboard=keyboard.get_keyboard(), message=f"Вызов принят! Сделайте Ваш ход и выберите камень&#128074;, ножницы&#9986; или бумагу&#9995; в формате: <предмет>")
                        vk.messages.send(peer_id=int(event.message.from_id),
                                         random_id=0, keyboard=keyboard.get_keyboard(), message=f"Сделайте Ваш ход и выберите камень&#128074;, ножницы&#9986; или бумагу&#9995; в формате:   <предмет>")
                    elif int(knb3(event.message.from_id)) == 0:
                        vk.messages.send(peer_id=int(knb(event.message.from_id)),
                                         random_id=0, keyboard=keyboard.get_keyboard(),
                                         message=f"Вызов принят! Сделайте Ваш ход и выберите камень&#128074;, ножницы&#9986; или бумагу&#9995; в формате: <предмет>")
                        vk.messages.send(peer_id=int(event.message.from_id),
                                         random_id=0, keyboard=keyboard.get_keyboard(),
                                         message=f"Сделайте Ваш ход и выберите камень&#128074;, ножницы&#9986; или бумагу&#9995; в формате:   <предмет>")

                elif event.message.text.lower() == "ножницы✂" and int(knb3(event.message.from_id)) == 1:
                    dict1[event.message.from_id] = {'action': 'ножницы'}
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вы выбрали &#9986;\nЖдём выбора противника!")
                    print(dict1[event.message.from_id]['action'])
                elif event.message.text.lower() == "камень👊" and int(knb3(event.message.from_id)) == 1:
                    dict1[event.message.from_id] = {'action': 'камень'}
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вы выбрали &#128074;\nЖдём выбора противника!")
                    print(dict1[event.message.from_id]['action'])
                elif event.message.text.lower() == "бумага✋" and int(knb3(event.message.from_id)) == 1:
                    dict1[event.message.from_id] = {'action': 'бумага'}
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вы выбрали &#9995;\nЖдём выбора противника!")
                    print(dict1[event.message.from_id]['action'])
                elif event.message.text.lower() == "ножницы✂" and int(knb3(event.message.from_id)) == 0:
                    dict1[event.message.from_id] = {'action': 'ножницы'}
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вы выбрали &#9986;\nЖдём выбора противника!")
                    print(dict1[event.message.from_id]['action'])
                elif event.message.text.lower() == "камень👊" and int(knb3(event.message.from_id)) == 0:
                    dict1[event.message.from_id] = {'action': 'камень'}
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вы выбрали &#128074;\nЖдём выбора противника!")
                    print(dict1[event.message.from_id]['action'])
                elif event.message.text.lower() == "бумага✋" and int(knb3(event.message.from_id)) == 0:
                    dict1[event.message.from_id] = {'action': 'бумага'}
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0,
                                     message=f"Вы выбрали &#9995;\nЖдём выбора противника!")
                    print(dict1[event.message.from_id]['action'])
                elif "реванш⚔" in event.message.text.lower():
                    x = json.dumps(event.message.payload)
                    x = x[1:]
                    x = x[:-1]
                    print(x)
                    dict2[str(event.message.from_id) + " " + str(x)] = {'action': 'кнб'}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Принять вызов&#9745;', color=VkKeyboardColor.POSITIVE)
                    keyboard.add_line()
                    keyboard.add_button('Отклонить вызов&#10062;', color=VkKeyboardColor.NEGATIVE)
                    vk.messages.send(peer_id=int(knb(event.message.from_id)),
                                     random_id=0, keyboard=keyboard.get_keyboard(), message=f"@id{event.message.from_id} просит у Вас реванша")
                    vk.messages.send(peer_id=int(event.message.from_id),
                                     random_id=0, message=f"Запрос на реванш был отправлен противнику. Ждём ответа.")
                try:
                    t = {"камень": "&#128074;",
                         "ножницы": "&#9986;",
                         "бумага": "&#9995;"}
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('Реванш&#9876;', color=VkKeyboardColor.POSITIVE, payload=str(knb(event.message.from_id)))
                    keyboard2 = VkKeyboard(one_time=False, inline=True)
                    keyboard2.add_button('Реванш&#9876;', color=VkKeyboardColor.POSITIVE, payload=str(knb0(event.message.from_id)))
                    r = [i for i in dict1.keys()]
                    if event.message.from_id in r:
                        k = knb0(event.message.from_id)
                        h = knb(event.message.from_id)
                        print(dict1[int(k)]['action'], dict1[int(h)]['action'])
                        if (dict1[knb0(event.message.from_id)]['action'] == 'бумага' and dict1[knb(event.message.from_id)]['action'] == 'камень') or (dict1[knb0(event.message.from_id)]['action'] == 'ножницы' and dict1[knb(event.message.from_id)]['action'] == 'бумага') or (dict1[knb0(event.message.from_id)]['action'] == 'камень' and dict1[knb(event.message.from_id)]['action'] == 'ножницы'):
                            vk.messages.send(peer_id=int(knb(event.message.from_id)),
                                             random_id=0, keyboard=keyboard2.get_keyboard(), message=f"Поражение! Вы проиграли!\n{t[dict1[knb0(event.message.from_id)]['action']]} — {t[dict1[knb(event.message.from_id)]['action']]}")
                            vk.messages.send(peer_id=int(knb0(event.message.from_id)),
                                             random_id=0, keyboard=keyboard.get_keyboard(), message=f"ПОБЕДА! Вы выиграли!\n{t[dict1[knb0(event.message.from_id)]['action']]} — {t[dict1[knb(event.message.from_id)]['action']]}")
                            del dict1[knb0(event.message.from_id)]
                            del dict1[knb(event.message.from_id)]
                            print(dict2)
                            try:
                                n = dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                            except KeyError:
                                n = dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]
                            try:
                                del dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                            except KeyError:
                                del dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]

                        if (dict1[knb0(event.message.from_id)]['action'] == 'бумага' and dict1[knb(event.message.from_id)]['action'] == 'ножницы') or (dict1[knb0(event.message.from_id)]['action'] == 'ножницы' and dict1[knb(event.message.from_id)]['action'] == 'камень') or (dict1[knb0(event.message.from_id)]['action'] == 'камень' and dict1[knb(event.message.from_id)]['action'] == 'бумага'):
                            vk.messages.send(peer_id=int(knb(event.message.from_id)),
                                             random_id=0, keyboard=keyboard2.get_keyboard(), message=f"ПОБЕДА! Вы выиграли!\n{t[dict1[knb0(event.message.from_id)]['action']]} — {t[dict1[knb(event.message.from_id)]['action']]}")
                            vk.messages.send(peer_id=int(knb0(event.message.from_id)),
                                             random_id=0, keyboard=keyboard.get_keyboard(), message=f"Поражение! Вы проиграли!\n{t[dict1[knb0(event.message.from_id)]['action']]} — {t[dict1[knb(event.message.from_id)]['action']]}")
                            del dict1[knb0(event.message.from_id)]
                            del dict1[knb(event.message.from_id)]
                            print(dict2)
                            try:
                                n = dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                            except KeyError:
                                n = dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]
                            try:
                                del dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                            except KeyError:
                                del dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]

                        if (dict1[knb(event.message.from_id)]['action'] == 'бумага' and dict1[knb0(event.message.from_id)]['action'] == 'бумага') or (dict1[knb(event.message.from_id)]['action'] == 'ножницы' and dict1[knb0(event.message.from_id)]['action'] == 'ножницы') or (dict1[knb0(event.message.from_id)]['action'] == 'камень' and dict1[knb(event.message.from_id)]['action'] == 'камень'):
                            vk.messages.send(peer_id=int(knb0(event.message.from_id)),
                                             random_id=0, keyboard=keyboard.get_keyboard(), message=f"НИЧЬЯ!\n{t[dict1[knb0(event.message.from_id)]['action']]} — {t[dict1[knb(event.message.from_id)]['action']]}")
                            vk.messages.send(peer_id=int(knb(event.message.from_id)),
                                             random_id=0, keyboard=keyboard2.get_keyboard(), message=f"НИЧЬЯ!\n{t[dict1[knb0(event.message.from_id)]['action']]} — {t[dict1[knb(event.message.from_id)]['action']]}")
                            del dict1[knb0(event.message.from_id)]
                            del dict1[knb(event.message.from_id)]
                            print(dict2)
                            try:
                                n = dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                            except KeyError:
                                n = dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]
                            try:
                                del dict2[f"{knb0(event.message.from_id)} {event.message.from_id}"]
                            except KeyError:
                                del dict2[f"{event.message.from_id} {knb(event.message.from_id)}"]
                            print(dict2, "s")
                except:
                    pass
f()

if __name__ == '__main__':
    th_1.start(), th_2.start()
